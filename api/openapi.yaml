openapi: 3.0.3
info:
  contact:
    email: tech@getlago.com
  description: Lago API allows your application to push customer information and metrics
    (events) from your application to the billing application.
  title: Lago API documentation
  version: 0.36.0-beta
externalDocs:
  description: Lago Github
  url: https://github.com/getlago
servers:
- url: https://api.getlago.com/api/v1
security:
- bearerAuth: []
tags:
- description: Everything about Billable metric collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/billable_metrics/billable-metric-object
  name: billable_metrics
- description: Everything about Add-on collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/add_ons/add-on-object
  name: add_ons
- description: Everything about Coupon collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/coupons/coupon-object
  name: coupons
- description: Everything about Organization collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/organizations/organization-object
  name: organizations
- description: Everything about Customer collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/customers/customer-object
  name: customers
- description: Everything about Event collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/events/event-object
  name: events
- description: Everything about Plan collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/plans/plan-object
  name: plans
- description: Everything about Subscription collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/subscriptions/subscription-object
  name: subscriptions
- description: Everything about Webhooks
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/webhooks/message-signature#1-retrieve-the-public-key
  name: webhooks
- description: Everything about Invoice collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/invoices/invoice-object
  name: invoices
- description: Everything about Fees
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/invoices/invoice-object#fee-object
  name: fees
- description: Everything about Wallet collection
  externalDocs:
    description: Find out more
    url: https://doc.getlago.com/docs/api/wallets/wallet-object
  name: wallets
- description: Everything about Credit notes collection
  name: credit_notes
paths:
  /billable_metrics:
    get:
      description: Find all billable metrics in certain organisation
      operationId: findAllBillableMetrics
      parameters:
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillableMetricsPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
      summary: Find Billable metrics
      tags:
      - billable_metrics
    post:
      description: Create a new billable metric
      operationId: createBillableMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillableMetricInput'
        description: Billable metric payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillableMetric'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a new billable metric
      tags:
      - billable_metrics
  /billable_metrics/{code}:
    delete:
      description: Delete a billable metric
      operationId: destroyBillableMetric
      parameters:
      - description: Code of the existing billable metric
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillableMetric'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Delete a billable metric
      tags:
      - billable_metrics
    get:
      description: Return a single billable metric
      operationId: findBillableMetric
      parameters:
      - description: Code of the existing billable metric
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillableMetric'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find billable metric by code
      tags:
      - billable_metrics
    put:
      description: Update an existing billable metric by code
      operationId: updateBillableMetric
      parameters:
      - description: Code of the existing billable metric
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillableMetricInput'
        description: Update an existing billable metric
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillableMetric'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an existing billable metric
      tags:
      - billable_metrics
  /billable_metrics/{code}/groups:
    get:
      description: Find all billable metric groups in certain organisation
      operationId: findAllBillableMetricGroups
      parameters:
      - description: Code of the existing billable metric
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
      summary: Find Billable metric groups
      tags:
      - billable_metrics
  /add_ons:
    get:
      description: Find all add-ons in certain organisation
      operationId: findAllAddOns
      parameters:
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOnsPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
      summary: Find add-ons
      tags:
      - add_ons
    post:
      description: Create a new add-on
      operationId: createAddOn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOnInput'
        description: Add-on payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a new add-on
      tags:
      - add_ons
  /add_ons/{code}:
    delete:
      description: Delete an add-on
      operationId: destroyAddOn
      parameters:
      - description: Code of the existing add-on
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Delete an add-on
      tags:
      - add_ons
    get:
      description: Return a single add-on
      operationId: findAddOn
      parameters:
      - description: Code of the existing add-on
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find add-on by code
      tags:
      - add_ons
    put:
      description: Update an existing add-on by code
      operationId: updateAddOn
      parameters:
      - description: Code of the existing add-on
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOnInput'
        description: Update an existing add-on
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an existing add-on
      tags:
      - add_ons
  /applied_add_ons:
    post:
      description: Apply an add-on to a customer
      operationId: applyAddOn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppliedAddOnInput'
        description: Apply add-on payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppliedAddOn'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Apply an add-on to a customer
      tags:
      - add_ons
  /coupons:
    get:
      description: Find all coupons in certain organisation
      operationId: findAllCoupons
      parameters:
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponsPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
      summary: Find Coupons
      tags:
      - coupons
    post:
      description: Create a new coupon
      operationId: createCoupon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponInput'
        description: Coupon payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a new coupon
      tags:
      - coupons
  /coupons/{code}:
    delete:
      description: Delete a coupon
      operationId: destroyCoupon
      parameters:
      - description: Code of the existing coupon
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Delete a coupon
      tags:
      - coupons
    get:
      description: Return a single coupon
      operationId: findCoupon
      parameters:
      - description: Code of the existing coupon
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find coupon by code
      tags:
      - coupons
    put:
      description: Update an existing coupon by code
      operationId: updateCoupon
      parameters:
      - description: Code of the existing coupon
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponInput'
        description: Update an existing coupon
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an existing coupon
      tags:
      - coupons
  /applied_coupons:
    get:
      description: Find all applied coupons
      operationId: findAllAppliedCoupons
      parameters:
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: Applied coupon status
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: Status
          enum:
          - active
          - terminated
          type: string
        style: form
      - description: External customer ID
        explode: true
        in: query
        name: external_customer_id
        required: false
        schema:
          example: "12345"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppliedCouponsPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
      summary: Find Applied Coupons
      tags:
      - coupons
    post:
      description: Apply a coupon to a customer
      operationId: applyCoupon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppliedCouponInput'
        description: Apply coupon payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppliedCoupon'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Apply a coupon to a customer
      tags:
      - coupons
  /organizations:
    put:
      description: Update an existing organization
      operationId: updateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInput'
        description: Update an existing organization
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an existing Organization
      tags:
      - organizations
  /customers:
    get:
      description: Find all customers in certain organisation
      operationId: findAllCustomers
      parameters:
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
      summary: Find customers
      tags:
      - customers
    post:
      description: Create a new customer
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInput'
        description: Customer payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a customer
      tags:
      - customers
  /customers/{external_id}:
    delete:
      description: Return the deleted customer
      operationId: destroyCustomer
      parameters:
      - description: External ID of the existing customer
        explode: false
        in: path
        name: external_id
        required: true
        schema:
          example: "12345"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Delete a customer
      tags:
      - customers
    get:
      description: Return a single customer
      operationId: findCustomer
      parameters:
      - description: External ID of the existing customer
        explode: false
        in: path
        name: external_id
        required: true
        schema:
          example: "12345"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find customer by external ID
      tags:
      - customers
  /customers/{customer_external_id}/current_usage:
    get:
      description: Return a customer current usage
      operationId: findCustomerCurrentUsage
      parameters:
      - description: External ID of the existing customer
        explode: false
        in: path
        name: customer_external_id
        required: true
        schema:
          example: "12345"
          type: string
        style: simple
      - description: External subscription ID
        explode: true
        in: query
        name: external_subscription_id
        required: true
        schema:
          example: "54321"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerUsage'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find customer current usage
      tags:
      - customers
  /customers/{customer_external_id}/portal_url:
    get:
      description: Get customer portal URL
      operationId: getCustomerPortalUrl
      parameters:
      - description: External ID of the existing customer
        explode: false
        in: path
        name: customer_external_id
        required: true
        schema:
          example: "12345"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCustomerPortalUrl_200_response'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForbidden'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Get customer portal URL
      tags:
      - customers
  /customers/{customer_external_id}/applied_coupons/{applied_coupon_id}:
    delete:
      description: Delete customer's appplied coupon
      operationId: deleteAppliedCoupon
      parameters:
      - description: External ID of the existing customer
        explode: false
        in: path
        name: customer_external_id
        required: true
        schema:
          example: "12345"
          type: string
        style: simple
      - description: Applied Coupon Lago ID
        explode: true
        in: path
        name: applied_coupon_id
        required: true
        schema:
          example: "54321"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppliedCoupon'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Delete customer's appplied coupon
      tags:
      - customers
  /events:
    post:
      description: Create a new event
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
        description: Event payload
        required: true
      responses:
        "200":
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a new event
      tags:
      - events
  /events/batch:
    post:
      description: Create batch events
      operationId: createBatchEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchEventInput'
        description: Batch events payload
        required: true
      responses:
        "200":
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create batch events
      tags:
      - events
  /events/{id}:
    get:
      description: Return a single event
      operationId: findEvent
      parameters:
      - description: Id of the existing transaction
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: "12345"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find event by transaction ID
      tags:
      - events
  /events/estimate_fees:
    post:
      description: Estimate the fees that would be created after reception of an event
        for a billable metric attached to one or multiple pay in advance charges
      operationId: eventEstimateFees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventEstimateFeesInput'
        description: Event payload for pay in advance fee estimate
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fees'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Estimate fees for an pay in advance charge
      tags:
      - events
  /plans:
    get:
      description: Find all plans in certain organisation
      operationId: findAllPlans
      parameters:
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
      summary: Find plans
      tags:
      - plans
    post:
      description: Create a new plan
      operationId: createPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanInput'
        description: Plan payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a new plan
      tags:
      - plans
  /plans/{code}:
    delete:
      description: Delete a plan
      operationId: destroyPlan
      parameters:
      - description: Code of the existing plan
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Delete a plan
      tags:
      - plans
    get:
      description: Return a single plan
      operationId: findPlan
      parameters:
      - description: Code of the existing plan
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find plan by code
      tags:
      - plans
    put:
      description: Update an existing plan by code
      operationId: updatePlan
      parameters:
      - description: Code of the existing plan
        explode: false
        in: path
        name: code
        required: true
        schema:
          example: example_code
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanInput'
        description: Update an existing plan
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an existing plan
      tags:
      - plans
  /subscriptions:
    get:
      description: Find all suscriptions for certain customer
      operationId: findAllSubscriptions
      parameters:
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: External customer ID
        explode: true
        in: query
        name: external_customer_id
        required: false
        schema:
          example: "12345"
          type: string
        style: form
      - description: Code of the plan attached to the subscription
        explode: true
        in: query
        name: plan_code
        required: false
        schema:
          example: example_code
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find subscriptions
      tags:
      - subscriptions
    post:
      description: Assign a plan to a customer
      operationId: createSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCreateInput'
        description: Subscription payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Assign a plan to a customer
      tags:
      - subscriptions
  /subscriptions/{external_id}:
    delete:
      description: Terminate a subscription
      operationId: destroySubscription
      parameters:
      - description: External ID of the existing subscription
        explode: false
        in: path
        name: external_id
        required: true
        schema:
          example: example_id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotAllowed'
          description: Not Allowed error
      summary: Terminate a subscription
      tags:
      - subscriptions
    put:
      description: Update an existing subscription by external ID
      operationId: updateSubscription
      parameters:
      - description: External ID of the existing subscription
        explode: false
        in: path
        name: external_id
        required: true
        schema:
          example: example_id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdateInput'
        description: Update an existing subscription
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an existing subscription
      tags:
      - subscriptions
  /webhooks/public_key:
    get:
      description: Webhook public key
      operationId: fetchPublicKey
      responses:
        "200":
          content:
            text/plain:
              schema:
                example: MEgCQQCo9+BpMRYQ/dL3DS2CyJxRF+j6ctbT3/Qp84+KeFhnii7NT7fELilKUSnxS30WAvQCCo2yU1orfgqr41mM70MBAgMBAAE=
                type: string
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
      summary: Fetch webhook public key
      tags:
      - webhooks
  /invoices:
    get:
      description: Find all invoices in certain organisation
      operationId: findAllInvoices
      parameters:
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: External customer ID
        explode: true
        in: query
        name: external_customer_id
        required: false
        schema:
          example: "12345"
          type: string
        style: form
      - description: Date from
        explode: true
        in: query
        name: issuing_date_from
        required: false
        schema:
          example: 2022-07-08
          format: date
          type: string
        style: form
      - description: Date to
        explode: true
        in: query
        name: issuing_date_to
        required: false
        schema:
          example: 2022-08-09
          format: date
          type: string
        style: form
      - description: Status
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - draft
          - finalized
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
      summary: Find all invoices
      tags:
      - invoices
    post:
      description: Create a new one off Invoice
      operationId: createInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceOneOffInput'
        description: Invoice payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a new invoice
      tags:
      - invoices
  /invoices/{id}:
    get:
      description: Return a single invoice
      operationId: findInvoice
      parameters:
      - description: ID of the existing Lago Invoice
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find invoice by ID
      tags:
      - invoices
    put:
      description: Update an existing invoice
      operationId: updateInvoice
      parameters:
      - description: ID of the existing Lago Invoice
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceInput'
        description: Update an existing invoice
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an existing invoice status
      tags:
      - invoices
  /invoices/{id}/download:
    post:
      description: Download an existing invoice
      operationId: downloadInvoice
      parameters:
      - description: ID of the existing Lago Invoice
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Download an existing invoice
      tags:
      - invoices
  /invoices/{id}/retry_payment:
    post:
      description: Retry invoice payment
      operationId: retryPayment
      parameters:
      - description: ID of the existing Lago Invoice
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotAllowed'
          description: Not Allowed error
      summary: Retry invoice payment
      tags:
      - invoices
  /invoices/{id}/refresh:
    put:
      description: Refresh a draft invoice
      operationId: refreshInvoice
      parameters:
      - description: ID of the existing Lago Invoice
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Refresh a draft invoice
      tags:
      - invoices
  /invoices/{id}/finalize:
    put:
      description: Finalize a draft invoice
      operationId: finalizeInvoice
      parameters:
      - description: ID of the draft Lago Invoice
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Finalize a draft invoice
      tags:
      - invoices
  /fees/{id}:
    get:
      description: Return a single fee
      operationId: findFee
      parameters:
      - description: ID of the existing Lago Fee
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeObject'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find fee by ID
      tags:
      - fees
    put:
      description: Update an existing fee
      operationId: updateFee
      parameters:
      - description: ID of the existing Lago Fee
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeUpdateInput'
        description: Payload to update a fee
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeObject'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an existing fee
      tags:
      - fees
  /fees:
    get:
      description: Find all fees of an organization and filter them
      operationId: findAllFees
      parameters:
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: External customer ID
        explode: true
        in: query
        name: external_customer_id
        required: false
        schema:
          example: "12345"
          type: string
        style: form
      - description: External subscription ID
        explode: true
        in: query
        name: external_subscription_id
        required: false
        schema:
          example: "12345"
          type: string
        style: form
      - description: Amount currency
        explode: true
        in: query
        name: currency
        required: false
        schema:
          example: EUR
          type: string
        style: form
      - description: Fee type
        explode: true
        in: query
        name: fee_type
        required: false
        schema:
          enum:
          - charge
          - add_on
          - subscription
          - credit
          - instant_charge
          example: charge
          type: string
        style: form
      - description: Code of the source billable metric
        explode: true
        in: query
        name: billable_metric_code
        required: false
        schema:
          example: bm_code
          type: string
        style: form
      - description: Payment status
        explode: true
        in: query
        name: payment_status
        required: false
        schema:
          enum:
          - pending
          - succeeded
          - failed
          - refunded
          example: succeeded
          type: string
        style: form
      - description: Creation datetime from
        explode: true
        in: query
        name: created_at_from
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Creation date to
        explode: true
        in: query
        name: created_at_to
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Payment succees date from
        explode: true
        in: query
        name: succeeded_at_from
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Payment succees date to
        explode: true
        in: query
        name: succeeded_at_to
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Payment failed date from
        explode: true
        in: query
        name: failed_at_from
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Payment failed date to
        explode: true
        in: query
        name: failed_at_to
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Payment refund date from
        explode: true
        in: query
        name: refunded_at_from
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      - description: Payment refund date to
        explode: true
        in: query
        name: refunded_at_to
        required: false
        schema:
          example: 2023-03-28T12:21:51Z
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeesPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Find all fees
      tags:
      - fees
  /wallets:
    get:
      description: Find all wallets for certain customer
      operationId: findAllWallets
      parameters:
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: External customer ID
        explode: true
        in: query
        name: external_customer_id
        required: true
        schema:
          example: "12345"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletsPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
      summary: Find wallets
      tags:
      - wallets
    post:
      description: Create a new wallet
      operationId: createWallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletInput'
        description: Wallet payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a new wallet
      tags:
      - wallets
  /wallets/{id}:
    delete:
      description: Delete a wallet
      operationId: destroyWallet
      parameters:
      - description: Lago ID of the existing wallet
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotAllowed'
          description: Not Allowed error
      summary: Delete a wallet
      tags:
      - wallets
    get:
      description: Return a wallet
      operationId: findWallet
      parameters:
      - description: Lago ID of the existing wallet
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find wallet
      tags:
      - wallets
    put:
      description: Update an existing wallet
      operationId: updateWallet
      parameters:
      - description: Lago ID of the existing wallet
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletUpdateInput'
        description: Update an existing wallet
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an existing wallet
      tags:
      - wallets
  /wallet_transactions:
    post:
      description: Create a new wallet transaction
      operationId: createWalletTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletTransactionInput'
        description: Wallet transaction payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTransactions'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a new wallet transaction
      tags:
      - wallets
  /wallets/{id}/wallet_transactions:
    get:
      description: Find all wallet transactions for certain wallet
      operationId: findAllWalletTransactions
      parameters:
      - description: Lago ID of the existing wallet
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: Status (pending or settled)
        explode: true
        in: query
        name: status
        required: false
        schema:
          example: pending
          type: string
        style: form
      - description: Transaction Type (inbound or outbound)
        explode: true
        in: query
        name: transaction_type
        required: false
        schema:
          example: inbound
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTransactionsPaginated'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find wallet transactions
      tags:
      - wallets
  /credit_notes:
    get:
      description: Find all credit notes in certain organisation
      operationId: findAllCreditNotes
      parameters:
      - description: Number of page
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 20
          type: integer
        style: form
      - description: External customer ID
        explode: true
        in: query
        name: external_customer_id
        required: false
        schema:
          example: "12345"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNotes'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
      summary: Find Credit notes
      tags:
      - credit_notes
    post:
      description: Create a new credit note
      operationId: createCreditNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNoteInput'
        description: Credit note payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Create a new Credit note
      tags:
      - credit_notes
  /credit_notes/{id}:
    get:
      description: Return a single credit note
      operationId: findCreditNote
      parameters:
      - description: Id of the existing credit note
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: "12345"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Find credit note
      tags:
      - credit_notes
    put:
      description: Update an existing credit note
      operationId: updateCreditNote
      parameters:
      - description: Id of the existing credit note
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: "12345"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNoteUpdateInput'
        description: Update an existing credit note
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBadRequest'
          description: Bad Request error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnprocessableEntity'
          description: Unprocessable entity error
      summary: Update an existing credit note
      tags:
      - credit_notes
  /credit_notes/{id}/download:
    post:
      description: Download an existing credit note
      operationId: downloadCreditNote
      parameters:
      - description: ID of the existing Lago Credit note
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
      summary: Download an existing credit note
      tags:
      - credit_notes
  /credit_notes/{id}/void:
    put:
      description: Void an existing credit note
      operationId: voidCreditNote
      parameters:
      - description: ID of the existing Lago Credit note
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUnauthorized'
          description: Unauthorized error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotFound'
          description: Not Found error
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseNotAllowed'
          description: Not Allowed error
      summary: Void existing credit note
      tags:
      - credit_notes
components:
  schemas:
    BillableMetricGroup:
      example:
        values:
        - null
        - null
        key: region
      properties:
        key:
          example: region
          type: string
        values:
          items:
            $ref: '#/components/schemas/BillableMetricGroup_values_inner'
          type: array
      required:
      - key
      - values
      type: object
    BillableMetricObject:
      example:
        aggregation_type: count_agg
        code: example_code
        plans_count: 0
        name: bm1
        description: description
        created_at: 2022-09-14T16:35:31Z
        active_subscriptions_count: 0
        draft_invoices_count: 0
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        field_name: amount
        group:
          values:
          - null
          - null
          key: region
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          example: bm1
          type: string
        code:
          example: example_code
          type: string
        description:
          example: description
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        field_name:
          example: amount
          type: string
        aggregation_type:
          description: Aggregation type
          enum:
          - count_agg
          - sum_agg
          - max_agg
          - unique_count_agg
          - recurring_count_agg
          type: string
        group:
          $ref: '#/components/schemas/BillableMetricGroup'
        active_subscriptions_count:
          example: 0
          type: integer
        draft_invoices_count:
          example: 0
          type: integer
        plans_count:
          example: 0
          type: integer
      required:
      - active_subscriptions_count
      - aggregation_type
      - code
      - created_at
      - draft_invoices_count
      - lago_id
      - name
      - plans_count
      type: object
    BillableMetric:
      example:
        billable_metric:
          aggregation_type: count_agg
          code: example_code
          plans_count: 0
          name: bm1
          description: description
          created_at: 2022-09-14T16:35:31Z
          active_subscriptions_count: 0
          draft_invoices_count: 0
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          field_name: amount
          group:
            values:
            - null
            - null
            key: region
      properties:
        billable_metric:
          $ref: '#/components/schemas/BillableMetricObject'
      required:
      - billable_metric
      type: object
    BillableMetricsPaginated:
      example:
        meta:
          next_page: 6
          total_count: 5
          total_pages: 5
          prev_page: 1
          current_page: 0
        billable_metrics:
        - aggregation_type: count_agg
          code: example_code
          plans_count: 0
          name: bm1
          description: description
          created_at: 2022-09-14T16:35:31Z
          active_subscriptions_count: 0
          draft_invoices_count: 0
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          field_name: amount
          group:
            values:
            - null
            - null
            key: region
        - aggregation_type: count_agg
          code: example_code
          plans_count: 0
          name: bm1
          description: description
          created_at: 2022-09-14T16:35:31Z
          active_subscriptions_count: 0
          draft_invoices_count: 0
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          field_name: amount
          group:
            values:
            - null
            - null
            key: region
      properties:
        billable_metrics:
          items:
            $ref: '#/components/schemas/BillableMetricObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - billable_metrics
      - meta
      type: object
    BillableMetricInput:
      example:
        billable_metric:
          aggregation_type: count_agg
          code: example_code
          name: bm1
          description: description
          field_name: amount
          group:
            values:
            - null
            - null
            key: region
      properties:
        billable_metric:
          $ref: '#/components/schemas/BillableMetricInput_billable_metric'
      required:
      - billable_metric
      type: object
    GroupObject:
      example:
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        value: EU
        key: region
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          example: region
          type: string
        value:
          example: EU
          type: string
      required:
      - key
      - lago_id
      - value
      type: object
    GroupsPaginated:
      example:
        meta:
          next_page: 6
          total_count: 5
          total_pages: 5
          prev_page: 1
          current_page: 0
        groups:
        - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: EU
          key: region
        - lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: EU
          key: region
      properties:
        groups:
          items:
            $ref: '#/components/schemas/GroupObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - groups
      - meta
      type: object
    AddOnObject:
      example:
        code: example_code
        amount_cents: 1200
        amount_currency: EUR
        name: example name
        description: description
        created_at: 2022-09-14T16:35:31Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          example: example name
          type: string
        code:
          example: example_code
          type: string
        description:
          example: description
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
      required:
      - amount_cents
      - amount_currency
      - code
      - created_at
      - lago_id
      - name
      type: object
    AddOn:
      example:
        add_on:
          code: example_code
          amount_cents: 1200
          amount_currency: EUR
          name: example name
          description: description
          created_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        add_on:
          $ref: '#/components/schemas/AddOnObject'
      required:
      - add_on
      type: object
    AddOnsPaginated:
      example:
        meta:
          next_page: 6
          total_count: 5
          total_pages: 5
          prev_page: 1
          current_page: 0
        add_ons:
        - code: example_code
          amount_cents: 1200
          amount_currency: EUR
          name: example name
          description: description
          created_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        - code: example_code
          amount_cents: 1200
          amount_currency: EUR
          name: example name
          description: description
          created_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        add_ons:
          items:
            $ref: '#/components/schemas/AddOnObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - add_ons
      - meta
      type: object
    AddOnInput:
      example:
        add_on:
          code: example_code
          amount_cents: 1200
          amount_currency: EUR
          name: example name
          description: description
      properties:
        add_on:
          $ref: '#/components/schemas/AddOnInput_add_on'
      required:
      - add_on
      type: object
    AppliedAddOnObject:
      example:
        lago_add_on_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        amount_cents: 1200
        external_customer_id: "1234567"
        amount_currency: EUR
        created_at: 2022-09-14T16:35:31Z
        add_on_code: code
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_add_on_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        add_on_code:
          example: code
          type: string
        lago_customer_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_customer_id:
          example: "1234567"
          type: string
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
      required:
      - add_on_code
      - amount_cents
      - amount_currency
      - created_at
      - external_customer_id
      - lago_add_on_id
      - lago_customer_id
      - lago_id
      type: object
    AppliedAddOn:
      example:
        applied_add_on:
          lago_add_on_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount_cents: 1200
          external_customer_id: "1234567"
          amount_currency: EUR
          created_at: 2022-09-14T16:35:31Z
          add_on_code: code
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        applied_add_on:
          $ref: '#/components/schemas/AppliedAddOnObject'
      required:
      - applied_add_on
      type: object
    AppliedAddOnInput:
      example:
        applied_add_on:
          amount_cents: 1200
          external_customer_id: "1234567"
          amount_currency: EUR
          add_on_code: code
      properties:
        applied_add_on:
          $ref: '#/components/schemas/AppliedAddOnInput_applied_add_on'
      required:
      - applied_add_on
      type: object
    CouponObject:
      example:
        limited_plans: true
        code: example_code
        limited_billable_metrics: true
        amount_cents: 1200
        created_at: 2022-09-14T16:35:31Z
        reusable: true
        frequency: once
        plan_codes:
        - code1
        - code1
        billable_metric_codes:
        - code2
        - code2
        percentage_rate: 25.0
        amount_currency: EUR
        frequency_duration: 3
        name: coupon1
        expiration: no_expiration
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        expiration_at: 2022-09-14T23:59:59Z
        coupon_type: fixed_amount
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          example: coupon1
          type: string
        code:
          example: example_code
          type: string
        coupon_type:
          description: Coupon type
          enum:
          - fixed_amount
          - percentage
          type: string
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
        reusable:
          example: true
          type: boolean
        limited_plans:
          example: true
          type: boolean
        plan_codes:
          items:
            example: code1
            type: string
          type: array
        limited_billable_metrics:
          example: true
          type: boolean
        billable_metric_codes:
          items:
            example: code2
            type: string
          type: array
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        percentage_rate:
          example: 25.0
          type: number
        frequency:
          description: Frequency type
          enum:
          - once
          - recurring
          type: string
        frequency_duration:
          example: 3
          type: integer
        expiration_at:
          example: 2022-09-14T23:59:59Z
          format: date-time
          type: string
        expiration:
          description: Expiration type
          enum:
          - no_expiration
          - time_limit
          type: string
      required:
      - code
      - coupon_type
      - created_at
      - expiration
      - frequency
      - lago_id
      - name
      type: object
    Coupon:
      example:
        coupon:
          limited_plans: true
          code: example_code
          limited_billable_metrics: true
          amount_cents: 1200
          created_at: 2022-09-14T16:35:31Z
          reusable: true
          frequency: once
          plan_codes:
          - code1
          - code1
          billable_metric_codes:
          - code2
          - code2
          percentage_rate: 25.0
          amount_currency: EUR
          frequency_duration: 3
          name: coupon1
          expiration: no_expiration
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2022-09-14T23:59:59Z
          coupon_type: fixed_amount
      properties:
        coupon:
          $ref: '#/components/schemas/CouponObject'
      required:
      - coupon
      type: object
    CouponsPaginated:
      example:
        coupons:
        - limited_plans: true
          code: example_code
          limited_billable_metrics: true
          amount_cents: 1200
          created_at: 2022-09-14T16:35:31Z
          reusable: true
          frequency: once
          plan_codes:
          - code1
          - code1
          billable_metric_codes:
          - code2
          - code2
          percentage_rate: 25.0
          amount_currency: EUR
          frequency_duration: 3
          name: coupon1
          expiration: no_expiration
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2022-09-14T23:59:59Z
          coupon_type: fixed_amount
        - limited_plans: true
          code: example_code
          limited_billable_metrics: true
          amount_cents: 1200
          created_at: 2022-09-14T16:35:31Z
          reusable: true
          frequency: once
          plan_codes:
          - code1
          - code1
          billable_metric_codes:
          - code2
          - code2
          percentage_rate: 25.0
          amount_currency: EUR
          frequency_duration: 3
          name: coupon1
          expiration: no_expiration
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2022-09-14T23:59:59Z
          coupon_type: fixed_amount
        meta:
          next_page: 6
          total_count: 5
          total_pages: 5
          prev_page: 1
          current_page: 0
      properties:
        coupons:
          items:
            $ref: '#/components/schemas/CouponObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - coupons
      - meta
      type: object
    CouponInput:
      example:
        coupon:
          code: example_code
          applies_to:
            plan_codes:
            - code1
            - code1
            billable_metric_codes:
            - code2
            - code2
          amount_cents: 1200
          percentage_rate: 25.0
          amount_currency: EUR
          frequency_duration: 3
          name: coupon1
          expiration: no_expiration
          expiration_at: 2022-09-14T23:59:59Z
          coupon_type: fixed_amount
          reusable: true
          frequency: once
      properties:
        coupon:
          $ref: '#/components/schemas/CouponInput_coupon'
      required:
      - coupon
      type: object
    AppliedCouponObject:
      example:
        coupon_code: example_code
        amount_cents: 1200
        frequency_duration_remaining: 2
        external_customer_id: "123456"
        amount_cents_remaining: 800
        lago_coupon_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        created_at: 2022-09-14T16:35:31Z
        frequency: once
        percentage_rate: 25.0
        amount_currency: EUR
        frequency_duration: 3
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        expiration_at: 2022-09-14T23:59:59Z
        terminated_at: 2022-09-14T16:35:31Z
        lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        status: active
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_coupon_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        coupon_code:
          example: example_code
          type: string
        lago_customer_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_customer_id:
          example: "123456"
          type: string
        status:
          description: Status
          enum:
          - active
          - terminated
          type: string
        amount_cents:
          example: 1200
          type: integer
        amount_cents_remaining:
          example: 800
          type: integer
        amount_currency:
          example: EUR
          type: string
        percentage_rate:
          example: 25.0
          type: number
        frequency:
          description: Frequency type
          enum:
          - once
          - recurring
          type: string
        frequency_duration:
          example: 3
          type: integer
        frequency_duration_remaining:
          example: 2
          type: integer
        expiration_at:
          example: 2022-09-14T23:59:59Z
          format: date-time
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        terminated_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
      required:
      - amount_cents
      - amount_currency
      - coupon_code
      - created_at
      - external_customer_id
      - frequency
      - lago_coupon_id
      - lago_customer_id
      - lago_id
      - status
      type: object
    AppliedCouponObjectExtended:
      allOf:
      - $ref: '#/components/schemas/AppliedCouponObject'
      - $ref: '#/components/schemas/AppliedCouponObjectExtended_allOf'
    AppliedCoupon:
      example:
        applied_coupon:
          coupon_code: example_code
          amount_cents: 1200
          frequency_duration_remaining: 2
          external_customer_id: "123456"
          amount_cents_remaining: 800
          lago_coupon_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          created_at: 2022-09-14T16:35:31Z
          frequency: once
          percentage_rate: 25.0
          amount_currency: EUR
          frequency_duration: 3
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2022-09-14T23:59:59Z
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
      properties:
        applied_coupon:
          $ref: '#/components/schemas/AppliedCouponObject'
      required:
      - applied_coupon
      type: object
    AppliedCouponsPaginated:
      example:
        applied_coupons:
        - null
        - null
        meta:
          next_page: 6
          total_count: 5
          total_pages: 5
          prev_page: 1
          current_page: 0
      properties:
        applied_coupons:
          items:
            $ref: '#/components/schemas/AppliedCouponObjectExtended'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - applied_coupons
      - meta
      type: object
    AppliedCouponInput:
      example:
        applied_coupon:
          coupon_code: example_code
          amount_cents: 1200
          percentage_rate: 25.0
          external_customer_id: "123456"
          frequency_duration: 3
          amount_currency: EUR
          frequency: once
      properties:
        applied_coupon:
          $ref: '#/components/schemas/AppliedCouponInput_applied_coupon'
      required:
      - applied_coupon
      type: object
    BillingConfigurationOrganization:
      example:
        document_locale: fr
        invoice_footer: text
        invoice_grace_period: 5
        vat_rate: 25.0
      properties:
        invoice_footer:
          example: text
          type: string
        invoice_grace_period:
          example: 5
          type: integer
        document_locale:
          example: fr
          type: string
        vat_rate:
          example: 25.0
          type: number
      type: object
    OrganizationObject:
      example:
        country: CZ
        legal_number: "10000"
        webhook_url: https://example.com
        city: City
        timezone: UTC
        created_at: 2022-09-14T16:35:31Z
        billing_configuration:
          document_locale: fr
          invoice_footer: text
          invoice_grace_period: 5
          vat_rate: 25.0
        zipcode: "10000"
        address_line2: address2
        address_line1: address1
        name: example name
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        state: state1
        legal_name: name1
        email: example@example.com
        tax_identification_number: EU123456789
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          example: example name
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        webhook_url:
          example: https://example.com
          type: string
        country:
          example: CZ
          type: string
        address_line1:
          example: address1
          type: string
        address_line2:
          example: address2
          type: string
        state:
          example: state1
          type: string
        zipcode:
          example: "10000"
          type: string
        email:
          example: example@example.com
          format: email
          type: string
        city:
          example: City
          type: string
        legal_name:
          example: name1
          type: string
        legal_number:
          example: "10000"
          type: string
        tax_identification_number:
          example: EU123456789
          type: string
        timezone:
          example: UTC
          type: string
        billing_configuration:
          $ref: '#/components/schemas/BillingConfigurationOrganization'
      required:
      - created_at
      - name
      type: object
    Organization:
      example:
        organization:
          country: CZ
          legal_number: "10000"
          webhook_url: https://example.com
          city: City
          timezone: UTC
          created_at: 2022-09-14T16:35:31Z
          billing_configuration:
            document_locale: fr
            invoice_footer: text
            invoice_grace_period: 5
            vat_rate: 25.0
          zipcode: "10000"
          address_line2: address2
          address_line1: address1
          name: example name
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          state: state1
          legal_name: name1
          email: example@example.com
          tax_identification_number: EU123456789
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationObject'
      required:
      - organization
      type: object
    OrganizationInput:
      example:
        organization:
          country: CZ
          legal_number: "10000"
          webhook_url: https://example.com
          city: City
          timezone: Europe/Paris
          email_settings:
          - invoice.finalized
          - invoice.finalized
          billing_configuration:
            document_locale: fr
            invoice_footer: text
            invoice_grace_period: 5
            vat_rate: 25.0
          zipcode: "10000"
          address_line2: address2
          address_line1: address1
          state: state1
          legal_name: name1
          email: example@example.com
          tax_identification_number: EU123456789
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationInput_organization'
      required:
      - organization
      type: object
    BillingConfigurationCustomer:
      additionalProperties: true
      example:
        provider_customer_id: "123456"
        document_locale: fr
        payment_provider: stripe
        invoice_grace_period: 3
        sync_with_provider: true
        vat_rate: 25.0
      properties:
        invoice_grace_period:
          example: 3
          type: integer
        payment_provider:
          description: Payment provider type
          enum:
          - stripe
          - gocardless
          type: string
        provider_customer_id:
          example: "123456"
          type: string
        sync_with_provider:
          example: true
          type: boolean
        document_locale:
          example: fr
          type: string
        vat_rate:
          example: 25.0
          type: number
      type: object
    CustomerMetadataObject:
      example:
        display_in_invoice: false
        created_at: 2022-09-14T16:35:31Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        value: John
        key: name
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          example: name
          type: string
        value:
          example: John
          type: string
        display_in_invoice:
          example: false
          type: boolean
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
      type: object
    CustomerObject:
      example:
        country: CZ
        legal_number: "10000"
        metadata:
        - display_in_invoice: false
          created_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: John
          key: name
        - display_in_invoice: false
          created_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: John
          key: name
        sequential_id: 12345
        city: City
        timezone: UTC
        created_at: 2022-09-14T16:35:31Z
        external_id: "12345"
        lago_url: https://lago.url
        url: https://example.com
        billing_configuration:
          provider_customer_id: "123456"
          document_locale: fr
          payment_provider: stripe
          invoice_grace_period: 3
          sync_with_provider: true
          vat_rate: 25.0
        zipcode: "10000"
        address_line2: address2
        address_line1: address1
        phone: +3551234567
        name: John Doe
        applicable_timezone: UTC
        currency: EUR
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        state: state1
        legal_name: name1
        slug: slug
        email: example@example.com
        tax_identification_number: EU123456789
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_id:
          example: "12345"
          type: string
        name:
          example: John Doe
          type: string
        sequential_id:
          example: 12345
          type: integer
        slug:
          example: slug
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        country:
          example: CZ
          type: string
        address_line1:
          example: address1
          type: string
        address_line2:
          example: address2
          type: string
        state:
          example: state1
          type: string
        zipcode:
          example: "10000"
          type: string
        email:
          example: example@example.com
          format: email
          type: string
        city:
          example: City
          type: string
        url:
          example: https://example.com
          type: string
        phone:
          example: +3551234567
          type: string
        lago_url:
          example: https://lago.url
          type: string
        legal_name:
          example: name1
          type: string
        legal_number:
          example: "10000"
          type: string
        tax_identification_number:
          example: EU123456789
          type: string
        currency:
          example: EUR
          type: string
        timezone:
          example: UTC
          type: string
        applicable_timezone:
          example: UTC
          type: string
        billing_configuration:
          $ref: '#/components/schemas/BillingConfigurationCustomer'
        metadata:
          items:
            $ref: '#/components/schemas/CustomerMetadataObject'
          type: array
      required:
      - external_id
      - lago_id
      - sequential_id
      - slug
      type: object
    Customer:
      example:
        customer:
          country: CZ
          legal_number: "10000"
          metadata:
          - display_in_invoice: false
            created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          - display_in_invoice: false
            created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          sequential_id: 12345
          city: City
          timezone: UTC
          created_at: 2022-09-14T16:35:31Z
          external_id: "12345"
          lago_url: https://lago.url
          url: https://example.com
          billing_configuration:
            provider_customer_id: "123456"
            document_locale: fr
            payment_provider: stripe
            invoice_grace_period: 3
            sync_with_provider: true
            vat_rate: 25.0
          zipcode: "10000"
          address_line2: address2
          address_line1: address1
          phone: +3551234567
          name: John Doe
          applicable_timezone: UTC
          currency: EUR
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          state: state1
          legal_name: name1
          slug: slug
          email: example@example.com
          tax_identification_number: EU123456789
      properties:
        customer:
          $ref: '#/components/schemas/CustomerObject'
      required:
      - customer
      type: object
    CustomersPaginated:
      example:
        meta:
          next_page: 6
          total_count: 5
          total_pages: 5
          prev_page: 1
          current_page: 0
        customers:
        - country: CZ
          legal_number: "10000"
          metadata:
          - display_in_invoice: false
            created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          - display_in_invoice: false
            created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          sequential_id: 12345
          city: City
          timezone: UTC
          created_at: 2022-09-14T16:35:31Z
          external_id: "12345"
          lago_url: https://lago.url
          url: https://example.com
          billing_configuration:
            provider_customer_id: "123456"
            document_locale: fr
            payment_provider: stripe
            invoice_grace_period: 3
            sync_with_provider: true
            vat_rate: 25.0
          zipcode: "10000"
          address_line2: address2
          address_line1: address1
          phone: +3551234567
          name: John Doe
          applicable_timezone: UTC
          currency: EUR
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          state: state1
          legal_name: name1
          slug: slug
          email: example@example.com
          tax_identification_number: EU123456789
        - country: CZ
          legal_number: "10000"
          metadata:
          - display_in_invoice: false
            created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          - display_in_invoice: false
            created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          sequential_id: 12345
          city: City
          timezone: UTC
          created_at: 2022-09-14T16:35:31Z
          external_id: "12345"
          lago_url: https://lago.url
          url: https://example.com
          billing_configuration:
            provider_customer_id: "123456"
            document_locale: fr
            payment_provider: stripe
            invoice_grace_period: 3
            sync_with_provider: true
            vat_rate: 25.0
          zipcode: "10000"
          address_line2: address2
          address_line1: address1
          phone: +3551234567
          name: John Doe
          applicable_timezone: UTC
          currency: EUR
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          state: state1
          legal_name: name1
          slug: slug
          email: example@example.com
          tax_identification_number: EU123456789
      properties:
        customers:
          items:
            $ref: '#/components/schemas/CustomerObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - customers
      - meta
      type: object
    CustomerInput:
      example:
        customer:
          country: CZ
          legal_number: "10000"
          metadata:
          - display_in_invoice: false
            id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          - display_in_invoice: false
            id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          city: City
          timezone: Europe/Paris
          external_id: "12345"
          lago_url: https://lago.url
          url: https://example.com
          billing_configuration:
            provider_customer_id: "123456"
            document_locale: fr
            payment_provider: stripe
            invoice_grace_period: 3
            sync_with_provider: true
            vat_rate: 25.0
          zipcode: "10000"
          address_line2: address2
          address_line1: address1
          phone: +3551234567
          name: John Doe
          currency: EUR
          state: state1
          legal_name: name1
          email: example@example.com
          tax_identification_number: EU123456789
      properties:
        customer:
          $ref: '#/components/schemas/CustomerInput_customer'
      required:
      - customer
      type: object
    ChargeUsageObject:
      example:
        billable_metric:
          aggregation_type: count_agg
          code: code
          name: Example name
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        charge:
          min_amount_cents: 1200
          pay_in_advance: true
          charge_model: standard
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        amount_cents: 1200
        amount_currency: EUR
        groups:
        - amount_cents: 1200
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          units: 3.5
          value: value
          key: key
        - amount_cents: 1200
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          units: 3.5
          value: value
          key: key
        units: 3.0
      properties:
        units:
          example: 3.0
          type: number
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
        charge:
          $ref: '#/components/schemas/ChargeUsageObject_charge'
        billable_metric:
          $ref: '#/components/schemas/ChargeUsageObject_billable_metric'
        groups:
          items:
            $ref: '#/components/schemas/ChargeUsageObject_groups_inner'
          type: array
      required:
      - amount_cents
      - amount_currency
      - billable_metric
      - charge
      - groups
      - units
      type: object
    CustomerUsageObject:
      example:
        total_amount_cents: 1400
        charges_usage:
        - billable_metric:
            aggregation_type: count_agg
            code: code
            name: Example name
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          charge:
            min_amount_cents: 1200
            pay_in_advance: true
            charge_model: standard
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount_cents: 1200
          amount_currency: EUR
          groups:
          - amount_cents: 1200
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            units: 3.5
            value: value
            key: key
          - amount_cents: 1200
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            units: 3.5
            value: value
            key: key
          units: 3.0
        - billable_metric:
            aggregation_type: count_agg
            code: code
            name: Example name
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          charge:
            min_amount_cents: 1200
            pay_in_advance: true
            charge_model: standard
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount_cents: 1200
          amount_currency: EUR
          groups:
          - amount_cents: 1200
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            units: 3.5
            value: value
            key: key
          - amount_cents: 1200
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            units: 3.5
            value: value
            key: key
          units: 3.0
        issuing_date: 2022-09-15T00:00:00Z
        amount_cents: 1200
        amount_currency: EUR
        to_datetime: 2022-09-14T00:00:00Z
        vat_amount_cents: 200
        vat_amount_currency: EUR
        from_datetime: 2022-09-14T00:00:00Z
        total_amount_currency: EUR
      properties:
        from_datetime:
          example: 2022-09-14T00:00:00Z
          format: date-time
          type: string
        to_datetime:
          example: 2022-09-14T00:00:00Z
          format: date-time
          type: string
        issuing_date:
          example: 2022-09-15T00:00:00Z
          format: date-time
          type: string
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
        total_amount_cents:
          example: 1400
          type: integer
        total_amount_currency:
          example: EUR
          type: string
        vat_amount_cents:
          example: 200
          type: integer
        vat_amount_currency:
          example: EUR
          type: string
        charges_usage:
          items:
            $ref: '#/components/schemas/ChargeUsageObject'
          type: array
      required:
      - amount_cents
      - amount_currency
      - charges_usage
      - from_datetime
      - issuing_date
      - to_datetime
      - total_amount_cents
      - total_amount_currency
      - vat_amount_cents
      - vat_amount_currency
      type: object
    CustomerUsage:
      example:
        customer_usage:
          total_amount_cents: 1400
          charges_usage:
          - billable_metric:
              aggregation_type: count_agg
              code: code
              name: Example name
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charge:
              min_amount_cents: 1200
              pay_in_advance: true
              charge_model: standard
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 1200
            amount_currency: EUR
            groups:
            - amount_cents: 1200
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              units: 3.5
              value: value
              key: key
            - amount_cents: 1200
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              units: 3.5
              value: value
              key: key
            units: 3.0
          - billable_metric:
              aggregation_type: count_agg
              code: code
              name: Example name
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            charge:
              min_amount_cents: 1200
              pay_in_advance: true
              charge_model: standard
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            amount_cents: 1200
            amount_currency: EUR
            groups:
            - amount_cents: 1200
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              units: 3.5
              value: value
              key: key
            - amount_cents: 1200
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              units: 3.5
              value: value
              key: key
            units: 3.0
          issuing_date: 2022-09-15T00:00:00Z
          amount_cents: 1200
          amount_currency: EUR
          to_datetime: 2022-09-14T00:00:00Z
          vat_amount_cents: 200
          vat_amount_currency: EUR
          from_datetime: 2022-09-14T00:00:00Z
          total_amount_currency: EUR
      properties:
        customer_usage:
          $ref: '#/components/schemas/CustomerUsageObject'
      required:
      - customer_usage
      type: object
    EventObject:
      example:
        transaction_id: "987654321"
        code: code
        lago_subscription_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        external_customer_id: "123456"
        created_at: 2022-09-14T16:35:31Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        external_subscription_id: "123456"
        properties: "{}"
        lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        timestamp: 2022-09-14T16:35:31Z
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        transaction_id:
          example: "987654321"
          type: string
        lago_customer_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_customer_id:
          example: "123456"
          type: string
        code:
          example: code
          type: string
        timestamp:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        properties:
          type: object
        lago_subscription_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_subscription_id:
          example: "123456"
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
      required:
      - code
      - created_at
      - external_customer_id
      - external_subscription_id
      - lago_customer_id
      - lago_id
      - lago_subscription_id
      - timestamp
      - transaction_id
      type: object
    Event:
      example:
        event:
          transaction_id: "987654321"
          code: code
          lago_subscription_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          external_customer_id: "123456"
          created_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          external_subscription_id: "123456"
          properties: "{}"
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          timestamp: 2022-09-14T16:35:31Z
      properties:
        event:
          $ref: '#/components/schemas/EventObject'
      required:
      - event
      type: object
    EventInput:
      example:
        event:
          transaction_id: "123456"
          code: code
          external_customer_id: "654321"
          external_subscription_id: "123456"
          properties: "{}"
          timestamp: 1669823754
      properties:
        event:
          $ref: '#/components/schemas/EventInput_event'
      required:
      - event
      type: object
    EventEstimateFeesInput:
      example:
        event:
          code: code
          external_customer_id: "654321"
          external_subscription_id: "123456"
          properties: "{}"
      properties:
        event:
          $ref: '#/components/schemas/EventEstimateFeesInput_event'
      required:
      - event
      type: object
    BatchEventInput:
      example:
        event:
          transaction_id: "123456"
          code: code
          external_customer_id: "654321"
          external_subscription_ids:
          - external_subscription_ids
          - external_subscription_ids
          properties: "{}"
          timestamp: 1669823754
      properties:
        event:
          $ref: '#/components/schemas/BatchEventInput_event'
      required:
      - event
      type: object
    Fees:
      example:
        fees:
        - item:
            lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            code: code
            item_type: AddOn
            name: name
            type: charge
          invoiceable: true
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          from_date: 2022-08-08T00:00:00Z
          amount_cents: 1000
          payment_status: pending
          created_at: 2022-09-14T16:35:31Z
          units: "2.5"
          total_amount_currency: EUR
          succeeded_at: 2022-09-14T16:35:31Z
          total_amount_cents: 1200
          events_count: 5
          to_date: 2022-08-08T00:00:00Z
          refunded_at: 2022-09-14T16:35:31Z
          amount_currency: EUR
          lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          pay_in_advance: true
          vat_amount_cents: 200
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          vat_amount_currency: EUR
          failed_at: 2022-09-14T16:35:31Z
          external_subscription_id: "54321"
          lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        - item:
            lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            code: code
            item_type: AddOn
            name: name
            type: charge
          invoiceable: true
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          from_date: 2022-08-08T00:00:00Z
          amount_cents: 1000
          payment_status: pending
          created_at: 2022-09-14T16:35:31Z
          units: "2.5"
          total_amount_currency: EUR
          succeeded_at: 2022-09-14T16:35:31Z
          total_amount_cents: 1200
          events_count: 5
          to_date: 2022-08-08T00:00:00Z
          refunded_at: 2022-09-14T16:35:31Z
          amount_currency: EUR
          lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          pay_in_advance: true
          vat_amount_cents: 200
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          vat_amount_currency: EUR
          failed_at: 2022-09-14T16:35:31Z
          external_subscription_id: "54321"
          lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        fees:
          items:
            $ref: '#/components/schemas/FeeObject'
          type: array
      required:
      - fees
      type: object
    FeesPaginated:
      allOf:
      - $ref: '#/components/schemas/Fees'
      - $ref: '#/components/schemas/FeesPaginated_allOf'
    FeeUpdateInput:
      example:
        invoice:
          payment_status: pending
      properties:
        invoice:
          $ref: '#/components/schemas/FeeUpdateInput_invoice'
      required:
      - invoice
      type: object
    GroupPropertiesObject:
      example:
        group_id: "123456"
        values: "{}"
      properties:
        group_id:
          example: "123456"
          type: string
        values:
          type: object
      required:
      - group_id
      - values
      type: object
    ChargeObject:
      example:
        invoiceable: true
        group_properties:
        - group_id: "123456"
          values: "{}"
        - group_id: "123456"
          values: "{}"
        min_amount_cents: 1200
        pay_in_advance: true
        billable_metric_code: bm_code
        created_at: 2022-09-14T16:35:31Z
        charge_model: standard
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        properties: "{}"
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_billable_metric_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        billable_metric_code:
          example: bm_code
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        charge_model:
          description: Charge model type
          enum:
          - standard
          - graduated
          - package
          - percentage
          - volume
          type: string
        pay_in_advance:
          example: true
          type: boolean
        invoiceable:
          example: true
          type: boolean
        min_amount_cents:
          example: 1200
          type: integer
        properties:
          type: object
        group_properties:
          items:
            $ref: '#/components/schemas/GroupPropertiesObject'
          type: array
      required:
      - billable_metric_code
      - charge_model
      - created_at
      - lago_billable_metric_id
      - lago_id
      type: object
    PlanObject:
      example:
        code: example_code
        amount_cents: 1200
        created_at: 2022-09-14T16:35:31Z
        description: description
        draft_invoices_count: 2
        charges:
        - invoiceable: true
          group_properties:
          - group_id: "123456"
            values: "{}"
          - group_id: "123456"
            values: "{}"
          min_amount_cents: 1200
          pay_in_advance: true
          billable_metric_code: bm_code
          created_at: 2022-09-14T16:35:31Z
          charge_model: standard
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          properties: "{}"
        - invoiceable: true
          group_properties:
          - group_id: "123456"
            values: "{}"
          - group_id: "123456"
            values: "{}"
          min_amount_cents: 1200
          pay_in_advance: true
          billable_metric_code: bm_code
          created_at: 2022-09-14T16:35:31Z
          charge_model: standard
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          properties: "{}"
        amount_currency: EUR
        bill_charges_monthly: false
        name: example name
        pay_in_advance: true
        active_subscriptions_count: 2
        interval: weekly
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        trial_period: 2
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          example: example name
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        code:
          example: example_code
          type: string
        interval:
          description: Plan interval
          enum:
          - weekly
          - monthly
          - yearly
          type: string
        description:
          example: description
          type: string
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
        trial_period:
          example: 2
          type: number
        pay_in_advance:
          example: true
          type: boolean
        bill_charges_monthly:
          example: false
          type: boolean
        active_subscriptions_count:
          example: 2
          type: integer
        draft_invoices_count:
          example: 2
          type: integer
        charges:
          items:
            $ref: '#/components/schemas/ChargeObject'
          type: array
      required:
      - active_subscriptions_count
      - amount_cents
      - amount_currency
      - code
      - created_at
      - draft_invoices_count
      - interval
      - lago_id
      - name
      type: object
    Plan:
      example:
        plan:
          code: example_code
          amount_cents: 1200
          created_at: 2022-09-14T16:35:31Z
          description: description
          draft_invoices_count: 2
          charges:
          - invoiceable: true
            group_properties:
            - group_id: "123456"
              values: "{}"
            - group_id: "123456"
              values: "{}"
            min_amount_cents: 1200
            pay_in_advance: true
            billable_metric_code: bm_code
            created_at: 2022-09-14T16:35:31Z
            charge_model: standard
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: "{}"
          - invoiceable: true
            group_properties:
            - group_id: "123456"
              values: "{}"
            - group_id: "123456"
              values: "{}"
            min_amount_cents: 1200
            pay_in_advance: true
            billable_metric_code: bm_code
            created_at: 2022-09-14T16:35:31Z
            charge_model: standard
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: "{}"
          amount_currency: EUR
          bill_charges_monthly: false
          name: example name
          pay_in_advance: true
          active_subscriptions_count: 2
          interval: weekly
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          trial_period: 2
      properties:
        plan:
          $ref: '#/components/schemas/PlanObject'
      required:
      - plan
      type: object
    PlansPaginated:
      example:
        plans:
        - code: example_code
          amount_cents: 1200
          created_at: 2022-09-14T16:35:31Z
          description: description
          draft_invoices_count: 2
          charges:
          - invoiceable: true
            group_properties:
            - group_id: "123456"
              values: "{}"
            - group_id: "123456"
              values: "{}"
            min_amount_cents: 1200
            pay_in_advance: true
            billable_metric_code: bm_code
            created_at: 2022-09-14T16:35:31Z
            charge_model: standard
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: "{}"
          - invoiceable: true
            group_properties:
            - group_id: "123456"
              values: "{}"
            - group_id: "123456"
              values: "{}"
            min_amount_cents: 1200
            pay_in_advance: true
            billable_metric_code: bm_code
            created_at: 2022-09-14T16:35:31Z
            charge_model: standard
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: "{}"
          amount_currency: EUR
          bill_charges_monthly: false
          name: example name
          pay_in_advance: true
          active_subscriptions_count: 2
          interval: weekly
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          trial_period: 2
        - code: example_code
          amount_cents: 1200
          created_at: 2022-09-14T16:35:31Z
          description: description
          draft_invoices_count: 2
          charges:
          - invoiceable: true
            group_properties:
            - group_id: "123456"
              values: "{}"
            - group_id: "123456"
              values: "{}"
            min_amount_cents: 1200
            pay_in_advance: true
            billable_metric_code: bm_code
            created_at: 2022-09-14T16:35:31Z
            charge_model: standard
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: "{}"
          - invoiceable: true
            group_properties:
            - group_id: "123456"
              values: "{}"
            - group_id: "123456"
              values: "{}"
            min_amount_cents: 1200
            pay_in_advance: true
            billable_metric_code: bm_code
            created_at: 2022-09-14T16:35:31Z
            charge_model: standard
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: "{}"
          amount_currency: EUR
          bill_charges_monthly: false
          name: example name
          pay_in_advance: true
          active_subscriptions_count: 2
          interval: weekly
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          trial_period: 2
        meta:
          next_page: 6
          total_count: 5
          total_pages: 5
          prev_page: 1
          current_page: 0
      properties:
        plans:
          items:
            $ref: '#/components/schemas/PlanObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - meta
      - plans
      type: object
    PlanInput:
      example:
        plan:
          charges:
          - invoiceable: true
            billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            group_properties:
            - group_id: "123456"
              values: "{}"
            - group_id: "123456"
              values: "{}"
            min_amount_cents: 0
            pay_in_advance: true
            charge_model: standard
            id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: "{}"
          - invoiceable: true
            billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            group_properties:
            - group_id: "123456"
              values: "{}"
            - group_id: "123456"
              values: "{}"
            min_amount_cents: 0
            pay_in_advance: true
            charge_model: standard
            id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            properties: "{}"
          code: example_code
          amount_cents: 1200
          amount_currency: EUR
          bill_charges_monthly: false
          name: example name
          pay_in_advance: true
          description: description
          interval: weekly
          trial_period: 2
      properties:
        plan:
          $ref: '#/components/schemas/PlanInput_plan'
      required:
      - plan
      type: object
    SubscriptionObject:
      example:
        canceled_at: 2022-09-14T16:35:31Z
        external_customer_id: "54321"
        next_plan_code: next_code
        plan_code: plan_code
        created_at: 2022-09-14T16:35:31Z
        external_id: "12345"
        downgrade_plan_date: 2022-09-14T16:35:31Z
        billing_time: calendar
        name: Test subscription
        subscription_at: 2022-09-14T16:35:31Z
        started_at: 2022-09-14T16:35:31Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        previous_plan_code: previous_code
        terminated_at: 2022-09-14T16:35:31Z
        lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        status: active
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_id:
          example: "12345"
          type: string
        lago_customer_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_customer_id:
          example: "54321"
          type: string
        name:
          example: Test subscription
          type: string
        plan_code:
          example: plan_code
          type: string
        status:
          description: Subscription status
          enum:
          - active
          - pending
          - terminated
          - canceled
          type: string
        billing_time:
          description: Billing time
          enum:
          - calendar
          - anniversary
          type: string
        subscription_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        started_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        terminated_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        canceled_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        previous_plan_code:
          example: previous_code
          type: string
        next_plan_code:
          example: next_code
          type: string
        downgrade_plan_date:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
      required:
      - billing_time
      - created_at
      - external_customer_id
      - external_id
      - lago_customer_id
      - lago_id
      - plan_code
      - started_at
      - status
      - subscription_at
      type: object
    Subscription:
      example:
        subscription:
          canceled_at: 2022-09-14T16:35:31Z
          external_customer_id: "54321"
          next_plan_code: next_code
          plan_code: plan_code
          created_at: 2022-09-14T16:35:31Z
          external_id: "12345"
          downgrade_plan_date: 2022-09-14T16:35:31Z
          billing_time: calendar
          name: Test subscription
          subscription_at: 2022-09-14T16:35:31Z
          started_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          previous_plan_code: previous_code
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
      properties:
        subscription:
          $ref: '#/components/schemas/SubscriptionObject'
      required:
      - subscription
      type: object
    SubscriptionsPaginated:
      example:
        subscriptions:
        - canceled_at: 2022-09-14T16:35:31Z
          external_customer_id: "54321"
          next_plan_code: next_code
          plan_code: plan_code
          created_at: 2022-09-14T16:35:31Z
          external_id: "12345"
          downgrade_plan_date: 2022-09-14T16:35:31Z
          billing_time: calendar
          name: Test subscription
          subscription_at: 2022-09-14T16:35:31Z
          started_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          previous_plan_code: previous_code
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
        - canceled_at: 2022-09-14T16:35:31Z
          external_customer_id: "54321"
          next_plan_code: next_code
          plan_code: plan_code
          created_at: 2022-09-14T16:35:31Z
          external_id: "12345"
          downgrade_plan_date: 2022-09-14T16:35:31Z
          billing_time: calendar
          name: Test subscription
          subscription_at: 2022-09-14T16:35:31Z
          started_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          previous_plan_code: previous_code
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
        meta:
          next_page: 6
          total_count: 5
          total_pages: 5
          prev_page: 1
          current_page: 0
      properties:
        subscriptions:
          items:
            $ref: '#/components/schemas/SubscriptionObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - meta
      - subscriptions
      type: object
    SubscriptionCreateInput:
      example:
        subscription:
          external_customer_id: "12345"
          billing_time: calendar
          name: Test name
          subscription_at: 2022-08-08T00:00:00Z
          plan_code: example_code
          external_id: "54321"
      properties:
        subscription:
          $ref: '#/components/schemas/SubscriptionCreateInput_subscription'
      required:
      - subscription
      type: object
    SubscriptionUpdateInput:
      example:
        subscription:
          name: New name
          subscription_at: 2022-08-08T00:00:00Z
      properties:
        subscription:
          $ref: '#/components/schemas/SubscriptionUpdateInput_subscription'
      required:
      - subscription
      type: object
    CreditObject:
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
        before_vat:
          example: false
          type: boolean
        item:
          $ref: '#/components/schemas/CreditObject_item'
        invoice:
          $ref: '#/components/schemas/CreditObject_invoice'
      required:
      - amount_cents
      - amount_currency
      - before_vat
      - invoice
      - item
      - lago_id
      type: object
    FeeObject:
      example:
        item:
          lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          code: code
          item_type: AddOn
          name: name
          type: charge
        invoiceable: true
        lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        from_date: 2022-08-08T00:00:00Z
        amount_cents: 1000
        payment_status: pending
        created_at: 2022-09-14T16:35:31Z
        units: "2.5"
        total_amount_currency: EUR
        succeeded_at: 2022-09-14T16:35:31Z
        total_amount_cents: 1200
        events_count: 5
        to_date: 2022-08-08T00:00:00Z
        refunded_at: 2022-09-14T16:35:31Z
        amount_currency: EUR
        lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        pay_in_advance: true
        vat_amount_cents: 200
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        vat_amount_currency: EUR
        failed_at: 2022-09-14T16:35:31Z
        external_subscription_id: "54321"
        lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_group_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_invoice_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_true_up_fee_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_true_up_parent_fee_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_subscription_id:
          example: "54321"
          type: string
        amount_cents:
          example: 1000
          type: integer
        amount_currency:
          example: EUR
          type: string
        vat_amount_cents:
          example: 200
          type: integer
        vat_amount_currency:
          example: EUR
          type: string
        units:
          example: "2.5"
          type: string
        total_amount_cents:
          example: 1200
          type: integer
        total_amount_currency:
          example: EUR
          type: string
        events_count:
          example: 5
          type: integer
        pay_in_advance:
          example: true
          type: boolean
        invoiceable:
          example: true
          type: boolean
        from_date:
          example: 2022-08-08T00:00:00Z
          format: date-time
          type: string
        to_date:
          example: 2022-08-08T00:00:00Z
          format: date-time
          type: string
        payment_status:
          enum:
          - pending
          - succeeded
          - failed
          - refunded
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        succeeded_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        failed_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        refunded_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        item:
          $ref: '#/components/schemas/FeeObject_item'
      required:
      - amount_cents
      - amount_currency
      - created_at
      - item
      - lago_id
      - payment_status
      - units
      - vat_amount_cents
      - vat_amount_currency
      type: object
    InvoiceMetadataObject:
      example:
        created_at: 2022-09-14T16:35:31Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        value: John
        key: name
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          example: name
          type: string
        value:
          example: John
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
      type: object
    InvoiceObject:
      example:
        sub_total_vat_included_amount_cents: 20
        file_url: https://example.com
        metadata:
        - created_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: John
          key: name
        - created_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: John
          key: name
        legacy: true
        amount_cents: 1200
        version_number: 2
        coupons_amount_cents: 20
        sub_total_vat_excluded_amount_cents: 20
        total_amount_currency: EUR
        number: "222345"
        amount_currency: EUR
        fees_amount_cents: 20
        invoice_type: subscription
        currency: EUR
        vat_amount_cents: 20
        prepaid_credit_amount_cents: 20
        sequential_id: 12345
        issuing_date: 2022-09-14T16:35:31Z
        payment_status: pending
        credit_amount_currency: EUR
        total_amount_cents: 20
        credit_amount_cents: 20
        credit_notes_amount_cents: 20
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        vat_amount_currency: EUR
        status: draft
        customer:
          country: CZ
          legal_number: "10000"
          metadata:
          - display_in_invoice: false
            created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          - display_in_invoice: false
            created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          sequential_id: 12345
          city: City
          timezone: UTC
          created_at: 2022-09-14T16:35:31Z
          external_id: "12345"
          lago_url: https://lago.url
          url: https://example.com
          billing_configuration:
            provider_customer_id: "123456"
            document_locale: fr
            payment_provider: stripe
            invoice_grace_period: 3
            sync_with_provider: true
            vat_rate: 25.0
          zipcode: "10000"
          address_line2: address2
          address_line1: address1
          phone: +3551234567
          name: John Doe
          applicable_timezone: UTC
          currency: EUR
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          state: state1
          legal_name: name1
          slug: slug
          email: example@example.com
          tax_identification_number: EU123456789
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        sequential_id:
          example: 12345
          type: integer
        number:
          example: "222345"
          type: string
        issuing_date:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        invoice_type:
          enum:
          - subscription
          - add_on
          - credit
          - one_off
          type: string
        status:
          enum:
          - draft
          - finalized
          type: string
        payment_status:
          enum:
          - pending
          - succeeded
          - failed
          type: string
        currency:
          example: EUR
          type: string
        fees_amount_cents:
          example: 20
          type: integer
        coupons_amount_cents:
          example: 20
          type: integer
        credit_notes_amount_cents:
          example: 20
          type: integer
        sub_total_vat_excluded_amount_cents:
          example: 20
          type: integer
        vat_amount_cents:
          example: 20
          type: integer
        sub_total_vat_included_amount_cents:
          example: 20
          type: integer
        prepaid_credit_amount_cents:
          example: 20
          type: integer
        total_amount_cents:
          example: 20
          type: integer
        version_number:
          example: 2
          type: integer
        amount_cents:
          deprecated: true
          example: 1200
          type: integer
        amount_currency:
          deprecated: true
          example: EUR
          type: string
        vat_amount_currency:
          deprecated: true
          example: EUR
          type: string
        credit_amount_cents:
          deprecated: true
          example: 20
          type: integer
        credit_amount_currency:
          deprecated: true
          example: EUR
          type: string
        total_amount_currency:
          deprecated: true
          example: EUR
          type: string
        legacy:
          deprecated: true
          example: true
          type: boolean
        file_url:
          example: https://example.com
          type: string
        customer:
          $ref: '#/components/schemas/CustomerObject'
        metadata:
          items:
            $ref: '#/components/schemas/InvoiceMetadataObject'
          type: array
      required:
      - amount_cents
      - amount_currency
      - coupons_amount_cents
      - credit_amount_cents
      - credit_amount_currency
      - credit_notes_amount_cents
      - currency
      - customer
      - fees_amount_cents
      - invoice_type
      - issuing_date
      - lago_id
      - legacy
      - number
      - payment_status
      - prepaid_credit_amount_cents
      - sequential_id
      - status
      - sub_total_vat_excluded_amount_cents
      - sub_total_vat_included_amount_cents
      - total_amount_cents
      - total_amount_currency
      - vat_amount_cents
      - vat_amount_currency
      - version_number
      type: object
    InvoiceObjectExtended:
      allOf:
      - $ref: '#/components/schemas/InvoiceObject'
      - $ref: '#/components/schemas/InvoiceObjectExtended_allOf'
    Invoice:
      example:
        invoice: null
      properties:
        invoice:
          $ref: '#/components/schemas/InvoiceObjectExtended'
      required:
      - invoice
      type: object
    InvoicesPaginated:
      example:
        invoices:
        - sub_total_vat_included_amount_cents: 20
          file_url: https://example.com
          metadata:
          - created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          - created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          legacy: true
          amount_cents: 1200
          version_number: 2
          coupons_amount_cents: 20
          sub_total_vat_excluded_amount_cents: 20
          total_amount_currency: EUR
          number: "222345"
          amount_currency: EUR
          fees_amount_cents: 20
          invoice_type: subscription
          currency: EUR
          vat_amount_cents: 20
          prepaid_credit_amount_cents: 20
          sequential_id: 12345
          issuing_date: 2022-09-14T16:35:31Z
          payment_status: pending
          credit_amount_currency: EUR
          total_amount_cents: 20
          credit_amount_cents: 20
          credit_notes_amount_cents: 20
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          vat_amount_currency: EUR
          status: draft
          customer:
            country: CZ
            legal_number: "10000"
            metadata:
            - display_in_invoice: false
              created_at: 2022-09-14T16:35:31Z
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              value: John
              key: name
            - display_in_invoice: false
              created_at: 2022-09-14T16:35:31Z
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              value: John
              key: name
            sequential_id: 12345
            city: City
            timezone: UTC
            created_at: 2022-09-14T16:35:31Z
            external_id: "12345"
            lago_url: https://lago.url
            url: https://example.com
            billing_configuration:
              provider_customer_id: "123456"
              document_locale: fr
              payment_provider: stripe
              invoice_grace_period: 3
              sync_with_provider: true
              vat_rate: 25.0
            zipcode: "10000"
            address_line2: address2
            address_line1: address1
            phone: +3551234567
            name: John Doe
            applicable_timezone: UTC
            currency: EUR
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            state: state1
            legal_name: name1
            slug: slug
            email: example@example.com
            tax_identification_number: EU123456789
        - sub_total_vat_included_amount_cents: 20
          file_url: https://example.com
          metadata:
          - created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          - created_at: 2022-09-14T16:35:31Z
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          legacy: true
          amount_cents: 1200
          version_number: 2
          coupons_amount_cents: 20
          sub_total_vat_excluded_amount_cents: 20
          total_amount_currency: EUR
          number: "222345"
          amount_currency: EUR
          fees_amount_cents: 20
          invoice_type: subscription
          currency: EUR
          vat_amount_cents: 20
          prepaid_credit_amount_cents: 20
          sequential_id: 12345
          issuing_date: 2022-09-14T16:35:31Z
          payment_status: pending
          credit_amount_currency: EUR
          total_amount_cents: 20
          credit_amount_cents: 20
          credit_notes_amount_cents: 20
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          vat_amount_currency: EUR
          status: draft
          customer:
            country: CZ
            legal_number: "10000"
            metadata:
            - display_in_invoice: false
              created_at: 2022-09-14T16:35:31Z
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              value: John
              key: name
            - display_in_invoice: false
              created_at: 2022-09-14T16:35:31Z
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              value: John
              key: name
            sequential_id: 12345
            city: City
            timezone: UTC
            created_at: 2022-09-14T16:35:31Z
            external_id: "12345"
            lago_url: https://lago.url
            url: https://example.com
            billing_configuration:
              provider_customer_id: "123456"
              document_locale: fr
              payment_provider: stripe
              invoice_grace_period: 3
              sync_with_provider: true
              vat_rate: 25.0
            zipcode: "10000"
            address_line2: address2
            address_line1: address1
            phone: +3551234567
            name: John Doe
            applicable_timezone: UTC
            currency: EUR
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            state: state1
            legal_name: name1
            slug: slug
            email: example@example.com
            tax_identification_number: EU123456789
        meta:
          next_page: 6
          total_count: 5
          total_pages: 5
          prev_page: 1
          current_page: 0
      properties:
        invoices:
          items:
            $ref: '#/components/schemas/InvoiceObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - invoices
      - meta
      type: object
    InvoiceInput:
      example:
        invoice:
          metadata:
          - id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          - id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            value: John
            key: name
          payment_status: pending
      properties:
        invoice:
          $ref: '#/components/schemas/InvoiceInput_invoice'
      required:
      - invoice
      type: object
    InvoiceOneOffInput:
      example:
        invoice:
          fees:
          - unit_amount_cents: 1200
            description: This is description
            add_on_code: "12345"
            units: 2.5
          - unit_amount_cents: 1200
            description: This is description
            add_on_code: "12345"
            units: 2.5
          external_customer_id: _ID_
          currency: EUR
      properties:
        invoice:
          $ref: '#/components/schemas/InvoiceOneOffInput_invoice'
      required:
      - invoice
      type: object
    WalletObject:
      example:
        external_customer_id: "12345"
        credits_balance: 500.0
        created_at: 2022-09-14T16:35:31Z
        balance: 1000.0
        name: Name
        rate_amount: 2.0
        currency: EUR
        consumed_credits: 100.0
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        expiration_at: 2022-09-14T23:59:59Z
        last_consumed_credit_at: 2022-09-14T16:35:31Z
        last_balance_sync_at: 2022-09-14T16:35:31Z
        terminated_at: 2022-09-14T16:35:31Z
        lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        status: active
        balance_cents: 100000
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_customer_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        external_customer_id:
          example: "12345"
          type: string
        status:
          description: Status
          enum:
          - active
          - terminated
          type: string
        currency:
          example: EUR
          type: string
        name:
          example: Name
          type: string
        rate_amount:
          example: 2.0
          type: number
        credits_balance:
          example: 500.0
          type: number
        balance:
          deprecated: true
          example: 1000.0
          type: number
        balance_cents:
          example: 100000
          type: integer
        consumed_credits:
          example: 100.0
          type: number
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        expiration_at:
          example: 2022-09-14T23:59:59Z
          format: date-time
          type: string
        last_balance_sync_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        last_consumed_credit_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        terminated_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
      required:
      - balance
      - balance_cents
      - consumed_credits
      - created_at
      - credits_balance
      - currency
      - external_customer_id
      - lago_customer_id
      - lago_id
      - rate_amount
      - status
      type: object
    Wallet:
      example:
        wallet:
          external_customer_id: "12345"
          credits_balance: 500.0
          created_at: 2022-09-14T16:35:31Z
          balance: 1000.0
          name: Name
          rate_amount: 2.0
          currency: EUR
          consumed_credits: 100.0
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2022-09-14T23:59:59Z
          last_consumed_credit_at: 2022-09-14T16:35:31Z
          last_balance_sync_at: 2022-09-14T16:35:31Z
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
          balance_cents: 100000
      properties:
        wallet:
          $ref: '#/components/schemas/WalletObject'
      required:
      - wallet
      type: object
    WalletsPaginated:
      example:
        meta:
          next_page: 6
          total_count: 5
          total_pages: 5
          prev_page: 1
          current_page: 0
        wallets:
        - external_customer_id: "12345"
          credits_balance: 500.0
          created_at: 2022-09-14T16:35:31Z
          balance: 1000.0
          name: Name
          rate_amount: 2.0
          currency: EUR
          consumed_credits: 100.0
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2022-09-14T23:59:59Z
          last_consumed_credit_at: 2022-09-14T16:35:31Z
          last_balance_sync_at: 2022-09-14T16:35:31Z
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
          balance_cents: 100000
        - external_customer_id: "12345"
          credits_balance: 500.0
          created_at: 2022-09-14T16:35:31Z
          balance: 1000.0
          name: Name
          rate_amount: 2.0
          currency: EUR
          consumed_credits: 100.0
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          expiration_at: 2022-09-14T23:59:59Z
          last_consumed_credit_at: 2022-09-14T16:35:31Z
          last_balance_sync_at: 2022-09-14T16:35:31Z
          terminated_at: 2022-09-14T16:35:31Z
          lago_customer_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          status: active
          balance_cents: 100000
      properties:
        wallets:
          items:
            $ref: '#/components/schemas/WalletObject'
          type: array
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - meta
      - wallets
      type: object
    WalletInput:
      example:
        wallet:
          external_customer_id: "12345"
          name: Wallet name
          rate_amount: 2.0
          currency: EUR
          expiration_at: 2022-09-14T23:59:59Z
          paid_credits: 500.0
          granted_credits: 10.0
      properties:
        wallet:
          $ref: '#/components/schemas/WalletInput_wallet'
      type: object
    WalletUpdateInput:
      example:
        wallet:
          name: Wallet name
          expiration_at: 2022-09-14T23:59:59Z
      properties:
        wallet:
          $ref: '#/components/schemas/WalletUpdateInput_wallet'
      required:
      - wallet
      type: object
    WalletTransactionObject:
      example:
        lago_wallet_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        amount: 500.0
        credit_amount: 100.0
        created_at: 2022-09-14T16:35:31Z
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        settled_at: 2022-09-14T16:35:31Z
        transaction_type: inbound
        status: pending
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        lago_wallet_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        status:
          description: Status
          enum:
          - pending
          - settled
          type: string
        transaction_type:
          description: Transaction type
          enum:
          - inbound
          - outbound
          type: string
        amount:
          example: 500.0
          type: number
        credit_amount:
          example: 100.0
          type: number
        settled_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
      required:
      - amount
      - created_at
      - credit_amount
      - lago_id
      - lago_wallet_id
      - status
      - transaction_type
      type: object
    WalletTransactions:
      example:
        wallet_transactions:
        - lago_wallet_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount: 500.0
          credit_amount: 100.0
          created_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          settled_at: 2022-09-14T16:35:31Z
          transaction_type: inbound
          status: pending
        - lago_wallet_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          amount: 500.0
          credit_amount: 100.0
          created_at: 2022-09-14T16:35:31Z
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          settled_at: 2022-09-14T16:35:31Z
          transaction_type: inbound
          status: pending
      properties:
        wallet_transactions:
          items:
            $ref: '#/components/schemas/WalletTransactionObject'
          type: array
      required:
      - wallet_transactions
      type: object
    WalletTransactionsPaginated:
      allOf:
      - $ref: '#/components/schemas/WalletTransactions'
      - $ref: '#/components/schemas/FeesPaginated_allOf'
    WalletTransactionInput:
      example:
        wallet_transaction:
          wallet_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          paid_credits: 100.0
          granted_credits: 10.0
      properties:
        wallet_transaction:
          $ref: '#/components/schemas/WalletTransactionInput_wallet_transaction'
      required:
      - wallet_transaction
      type: object
    CreditNoteItemObject:
      example:
        amount_cents: 1220
        amount_currency: EUR
        fee:
          item:
            lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            code: code
            item_type: AddOn
            name: name
            type: charge
          invoiceable: true
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          from_date: 2022-08-08T00:00:00Z
          amount_cents: 1000
          payment_status: pending
          created_at: 2022-09-14T16:35:31Z
          units: "2.5"
          total_amount_currency: EUR
          succeeded_at: 2022-09-14T16:35:31Z
          total_amount_cents: 1200
          events_count: 5
          to_date: 2022-08-08T00:00:00Z
          refunded_at: 2022-09-14T16:35:31Z
          amount_currency: EUR
          lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          pay_in_advance: true
          vat_amount_cents: 200
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          vat_amount_currency: EUR
          failed_at: 2022-09-14T16:35:31Z
          external_subscription_id: "54321"
          lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        amount_cents:
          example: 1220
          type: integer
        amount_currency:
          example: EUR
          type: string
        fee:
          $ref: '#/components/schemas/FeeObject'
      required:
      - amount_cents
      - amount_currency
      - fee
      - lago_id
      type: object
    CreditNoteObject:
      example:
        reason: duplicated_charge
        file_url: https://example.com
        description: description
        created_at: 2022-09-14T16:35:31Z
        total_amount_currency: EUR
        sub_total_vat_excluded_amount_cents: 1000
        sub_total_vat_excluded_amount_currency: EUR
        number: "123456789"
        balance_amount_cents: 20
        updated_at: 2022-09-14T16:35:31Z
        currency: EUR
        vat_amount_cents: 20
        invoice_number: "123456789"
        refund_status: pending
        sequential_id: 1234
        lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        issuing_date: 2022-09-14T16:35:31Z
        credit_amount_currency: EUR
        refund_amount_currency: EUR
        balance_amount_currency: EUR
        total_amount_cents: 1220
        credit_status: available
        credit_amount_cents: 20
        coupons_adjustement_amount_cents: 20
        refund_amount_cents: 20
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        vat_amount_currency: EUR
        items:
        - amount_cents: 1220
          amount_currency: EUR
          fee:
            item:
              lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              code: code
              item_type: AddOn
              name: name
              type: charge
            invoiceable: true
            lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            from_date: 2022-08-08T00:00:00Z
            amount_cents: 1000
            payment_status: pending
            created_at: 2022-09-14T16:35:31Z
            units: "2.5"
            total_amount_currency: EUR
            succeeded_at: 2022-09-14T16:35:31Z
            total_amount_cents: 1200
            events_count: 5
            to_date: 2022-08-08T00:00:00Z
            refunded_at: 2022-09-14T16:35:31Z
            amount_currency: EUR
            lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            pay_in_advance: true
            vat_amount_cents: 200
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            vat_amount_currency: EUR
            failed_at: 2022-09-14T16:35:31Z
            external_subscription_id: "54321"
            lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        - amount_cents: 1220
          amount_currency: EUR
          fee:
            item:
              lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              code: code
              item_type: AddOn
              name: name
              type: charge
            invoiceable: true
            lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            from_date: 2022-08-08T00:00:00Z
            amount_cents: 1000
            payment_status: pending
            created_at: 2022-09-14T16:35:31Z
            units: "2.5"
            total_amount_currency: EUR
            succeeded_at: 2022-09-14T16:35:31Z
            total_amount_cents: 1200
            events_count: 5
            to_date: 2022-08-08T00:00:00Z
            refunded_at: 2022-09-14T16:35:31Z
            amount_currency: EUR
            lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            pay_in_advance: true
            vat_amount_cents: 200
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            vat_amount_currency: EUR
            failed_at: 2022-09-14T16:35:31Z
            external_subscription_id: "54321"
            lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        sequential_id:
          example: 1234
          type: integer
        number:
          example: "123456789"
          type: string
        lago_invoice_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        invoice_number:
          example: "123456789"
          type: string
        issuing_date:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        credit_status:
          description: Credit status
          enum:
          - available
          - consumed
          - voided
          type: string
        refund_status:
          description: Refund status
          enum:
          - pending
          - succeeded
          - failed
          type: string
        reason:
          description: Reason
          enum:
          - duplicated_charge
          - product_unsatisfactory
          - order_change
          - order_cancellation
          - fraudulent_charge
          - other
          type: string
        description:
          example: description
          type: string
        currency:
          example: EUR
          type: string
        total_amount_cents:
          example: 1220
          type: integer
        total_amount_currency:
          deprecated: true
          example: EUR
          type: string
        vat_amount_cents:
          example: 20
          type: integer
        vat_amount_currency:
          deprecated: true
          example: EUR
          type: string
        sub_total_vat_excluded_amount_cents:
          example: 1000
          type: integer
        sub_total_vat_excluded_amount_currency:
          deprecated: true
          example: EUR
          type: string
        balance_amount_cents:
          example: 20
          type: integer
        balance_amount_currency:
          deprecated: true
          example: EUR
          type: string
        credit_amount_cents:
          example: 20
          type: integer
        credit_amount_currency:
          deprecated: true
          example: EUR
          type: string
        refund_amount_cents:
          example: 20
          type: integer
        refund_amount_currency:
          deprecated: true
          example: EUR
          type: string
        coupons_adjustement_amount_cents:
          example: 20
          type: integer
        created_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        updated_at:
          example: 2022-09-14T16:35:31Z
          format: date-time
          type: string
        file_url:
          example: https://example.com
          type: string
        items:
          items:
            $ref: '#/components/schemas/CreditNoteItemObject'
          type: array
      required:
      - balance_amount_cents
      - balance_amount_currency
      - coupons_adjustement_amount_cents
      - created_at
      - credit_amount_cents
      - credit_amount_currency
      - currency
      - invoice_number
      - issuing_date
      - lago_id
      - lago_invoice_id
      - number
      - reason
      - refund_amount_cents
      - refund_amount_currency
      - sequential_id
      - sub_total_vat_excluded_amount_cents
      - sub_total_vat_excluded_amount_currency
      - total_amount_cents
      - total_amount_currency
      - updated_at
      - vat_amount_cents
      - vat_amount_currency
      type: object
    CreditNote:
      example:
        credit_note:
          reason: duplicated_charge
          file_url: https://example.com
          description: description
          created_at: 2022-09-14T16:35:31Z
          total_amount_currency: EUR
          sub_total_vat_excluded_amount_cents: 1000
          sub_total_vat_excluded_amount_currency: EUR
          number: "123456789"
          balance_amount_cents: 20
          updated_at: 2022-09-14T16:35:31Z
          currency: EUR
          vat_amount_cents: 20
          invoice_number: "123456789"
          refund_status: pending
          sequential_id: 1234
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          issuing_date: 2022-09-14T16:35:31Z
          credit_amount_currency: EUR
          refund_amount_currency: EUR
          balance_amount_currency: EUR
          total_amount_cents: 1220
          credit_status: available
          credit_amount_cents: 20
          coupons_adjustement_amount_cents: 20
          refund_amount_cents: 20
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          vat_amount_currency: EUR
          items:
          - amount_cents: 1220
            amount_currency: EUR
            fee:
              item:
                lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                code: code
                item_type: AddOn
                name: name
                type: charge
              invoiceable: true
              lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              from_date: 2022-08-08T00:00:00Z
              amount_cents: 1000
              payment_status: pending
              created_at: 2022-09-14T16:35:31Z
              units: "2.5"
              total_amount_currency: EUR
              succeeded_at: 2022-09-14T16:35:31Z
              total_amount_cents: 1200
              events_count: 5
              to_date: 2022-08-08T00:00:00Z
              refunded_at: 2022-09-14T16:35:31Z
              amount_currency: EUR
              lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              pay_in_advance: true
              vat_amount_cents: 200
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              vat_amount_currency: EUR
              failed_at: 2022-09-14T16:35:31Z
              external_subscription_id: "54321"
              lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          - amount_cents: 1220
            amount_currency: EUR
            fee:
              item:
                lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                code: code
                item_type: AddOn
                name: name
                type: charge
              invoiceable: true
              lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              from_date: 2022-08-08T00:00:00Z
              amount_cents: 1000
              payment_status: pending
              created_at: 2022-09-14T16:35:31Z
              units: "2.5"
              total_amount_currency: EUR
              succeeded_at: 2022-09-14T16:35:31Z
              total_amount_cents: 1200
              events_count: 5
              to_date: 2022-08-08T00:00:00Z
              refunded_at: 2022-09-14T16:35:31Z
              amount_currency: EUR
              lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              pay_in_advance: true
              vat_amount_cents: 200
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              vat_amount_currency: EUR
              failed_at: 2022-09-14T16:35:31Z
              external_subscription_id: "54321"
              lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        credit_note:
          $ref: '#/components/schemas/CreditNoteObject'
      required:
      - credit_note
      type: object
    CreditNotes:
      example:
        credit_notes:
        - reason: duplicated_charge
          file_url: https://example.com
          description: description
          created_at: 2022-09-14T16:35:31Z
          total_amount_currency: EUR
          sub_total_vat_excluded_amount_cents: 1000
          sub_total_vat_excluded_amount_currency: EUR
          number: "123456789"
          balance_amount_cents: 20
          updated_at: 2022-09-14T16:35:31Z
          currency: EUR
          vat_amount_cents: 20
          invoice_number: "123456789"
          refund_status: pending
          sequential_id: 1234
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          issuing_date: 2022-09-14T16:35:31Z
          credit_amount_currency: EUR
          refund_amount_currency: EUR
          balance_amount_currency: EUR
          total_amount_cents: 1220
          credit_status: available
          credit_amount_cents: 20
          coupons_adjustement_amount_cents: 20
          refund_amount_cents: 20
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          vat_amount_currency: EUR
          items:
          - amount_cents: 1220
            amount_currency: EUR
            fee:
              item:
                lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                code: code
                item_type: AddOn
                name: name
                type: charge
              invoiceable: true
              lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              from_date: 2022-08-08T00:00:00Z
              amount_cents: 1000
              payment_status: pending
              created_at: 2022-09-14T16:35:31Z
              units: "2.5"
              total_amount_currency: EUR
              succeeded_at: 2022-09-14T16:35:31Z
              total_amount_cents: 1200
              events_count: 5
              to_date: 2022-08-08T00:00:00Z
              refunded_at: 2022-09-14T16:35:31Z
              amount_currency: EUR
              lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              pay_in_advance: true
              vat_amount_cents: 200
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              vat_amount_currency: EUR
              failed_at: 2022-09-14T16:35:31Z
              external_subscription_id: "54321"
              lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          - amount_cents: 1220
            amount_currency: EUR
            fee:
              item:
                lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                code: code
                item_type: AddOn
                name: name
                type: charge
              invoiceable: true
              lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              from_date: 2022-08-08T00:00:00Z
              amount_cents: 1000
              payment_status: pending
              created_at: 2022-09-14T16:35:31Z
              units: "2.5"
              total_amount_currency: EUR
              succeeded_at: 2022-09-14T16:35:31Z
              total_amount_cents: 1200
              events_count: 5
              to_date: 2022-08-08T00:00:00Z
              refunded_at: 2022-09-14T16:35:31Z
              amount_currency: EUR
              lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              pay_in_advance: true
              vat_amount_cents: 200
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              vat_amount_currency: EUR
              failed_at: 2022-09-14T16:35:31Z
              external_subscription_id: "54321"
              lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        - reason: duplicated_charge
          file_url: https://example.com
          description: description
          created_at: 2022-09-14T16:35:31Z
          total_amount_currency: EUR
          sub_total_vat_excluded_amount_cents: 1000
          sub_total_vat_excluded_amount_currency: EUR
          number: "123456789"
          balance_amount_cents: 20
          updated_at: 2022-09-14T16:35:31Z
          currency: EUR
          vat_amount_cents: 20
          invoice_number: "123456789"
          refund_status: pending
          sequential_id: 1234
          lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          issuing_date: 2022-09-14T16:35:31Z
          credit_amount_currency: EUR
          refund_amount_currency: EUR
          balance_amount_currency: EUR
          total_amount_cents: 1220
          credit_status: available
          credit_amount_cents: 20
          coupons_adjustement_amount_cents: 20
          refund_amount_cents: 20
          lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          vat_amount_currency: EUR
          items:
          - amount_cents: 1220
            amount_currency: EUR
            fee:
              item:
                lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                code: code
                item_type: AddOn
                name: name
                type: charge
              invoiceable: true
              lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              from_date: 2022-08-08T00:00:00Z
              amount_cents: 1000
              payment_status: pending
              created_at: 2022-09-14T16:35:31Z
              units: "2.5"
              total_amount_currency: EUR
              succeeded_at: 2022-09-14T16:35:31Z
              total_amount_cents: 1200
              events_count: 5
              to_date: 2022-08-08T00:00:00Z
              refunded_at: 2022-09-14T16:35:31Z
              amount_currency: EUR
              lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              pay_in_advance: true
              vat_amount_cents: 200
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              vat_amount_currency: EUR
              failed_at: 2022-09-14T16:35:31Z
              external_subscription_id: "54321"
              lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          - amount_cents: 1220
            amount_currency: EUR
            fee:
              item:
                lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
                code: code
                item_type: AddOn
                name: name
                type: charge
              invoiceable: true
              lago_invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              from_date: 2022-08-08T00:00:00Z
              amount_cents: 1000
              payment_status: pending
              created_at: 2022-09-14T16:35:31Z
              units: "2.5"
              total_amount_currency: EUR
              succeeded_at: 2022-09-14T16:35:31Z
              total_amount_cents: 1200
              events_count: 5
              to_date: 2022-08-08T00:00:00Z
              refunded_at: 2022-09-14T16:35:31Z
              amount_currency: EUR
              lago_true_up_parent_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              pay_in_advance: true
              vat_amount_cents: 200
              lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              lago_group_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
              vat_amount_currency: EUR
              failed_at: 2022-09-14T16:35:31Z
              external_subscription_id: "54321"
              lago_true_up_fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
            lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        credit_notes:
          items:
            $ref: '#/components/schemas/CreditNoteObject'
          type: array
      required:
      - credit_notes
      type: object
    CreditNoteInput:
      example:
        credit_note:
          reason: duplicated_charge
          credit_amount_cents: 20
          invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          description: description
          refund_amount_cents: 20
          items:
          - amount_cents: 20
            fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          - amount_cents: 20
            fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        credit_note:
          $ref: '#/components/schemas/CreditNoteInput_credit_note'
      required:
      - credit_note
      type: object
    CreditNoteUpdateInput:
      example:
        credit_note:
          refund_status: pending
      properties:
        credit_note:
          $ref: '#/components/schemas/CreditNoteUpdateInput_credit_note'
      required:
      - credit_note
      type: object
    PaginationMeta:
      example:
        next_page: 6
        total_count: 5
        total_pages: 5
        prev_page: 1
        current_page: 0
      properties:
        current_page:
          description: Current page
          type: integer
        next_page:
          description: Next page
          type: integer
        prev_page:
          description: Previous page
          type: integer
        total_pages:
          description: Total number of pages
          type: integer
        total_count:
          description: Total number of records
          type: integer
      required:
      - current_page
      - total_count
      - total_pages
      type: object
    ApiResponseBadRequest:
      properties:
        status:
          example: 400
          format: int32
          type: integer
        error:
          example: Bad request
          type: string
      required:
      - error
      - status
      type: object
    ApiResponseUnauthorized:
      properties:
        status:
          example: 401
          format: int32
          type: integer
        error:
          example: Unauthorized
          type: string
      required:
      - error
      - status
      type: object
    ApiResponseUnprocessableEntity:
      properties:
        status:
          example: 422
          format: int32
          type: integer
        error:
          example: Unprocessable entity
          type: string
        code:
          example: validation_errors
          type: string
        error_details:
          type: object
      required:
      - code
      - error
      - error_details
      - status
      type: object
    ApiResponseNotFound:
      properties:
        status:
          example: 404
          format: int32
          type: integer
        error:
          example: Not Found
          type: string
        code:
          example: object_not_found
          type: string
      required:
      - code
      - error
      - status
      type: object
    ApiResponseForbidden:
      properties:
        status:
          example: 403
          format: int32
          type: integer
        error:
          example: Forbidden
          type: string
        code:
          example: feature_unavailable
          type: string
      required:
      - code
      - error
      - status
      type: object
    ApiResponseNotAllowed:
      properties:
        status:
          example: 405
          format: int32
          type: integer
        error:
          example: Method Not Allowed
          type: string
        code:
          example: not_allowed
          type: string
      required:
      - code
      - error
      - status
      type: object
    getCustomerPortalUrl_200_response_customer:
      example:
        portal_url: https://app.lago.com/customer-portal/abc/
      properties:
        portal_url:
          example: https://app.lago.com/customer-portal/abc/
          type: string
      required:
      - portal_url
      type: object
    getCustomerPortalUrl_200_response:
      example:
        customer:
          portal_url: https://app.lago.com/customer-portal/abc/
      properties:
        customer:
          $ref: '#/components/schemas/getCustomerPortalUrl_200_response_customer'
      required:
      - customer
      type: object
    BillableMetricGroup_values_inner:
      oneOf:
      - type: string
      - type: object
    BillableMetricInput_billable_metric:
      example:
        aggregation_type: count_agg
        code: example_code
        name: bm1
        description: description
        field_name: amount
        group:
          values:
          - null
          - null
          key: region
      properties:
        name:
          example: bm1
          type: string
        code:
          example: example_code
          type: string
        description:
          example: description
          type: string
        field_name:
          example: amount
          type: string
        aggregation_type:
          description: Aggregation type
          enum:
          - count_agg
          - sum_agg
          - max_agg
          - unique_count_agg
          - recurring_count_agg
          type: string
        group:
          $ref: '#/components/schemas/BillableMetricGroup'
      type: object
    AddOnInput_add_on:
      example:
        code: example_code
        amount_cents: 1200
        amount_currency: EUR
        name: example name
        description: description
      properties:
        name:
          example: example name
          type: string
        code:
          example: example_code
          type: string
        description:
          example: description
          type: string
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
      type: object
    AppliedAddOnInput_applied_add_on:
      example:
        amount_cents: 1200
        external_customer_id: "1234567"
        amount_currency: EUR
        add_on_code: code
      properties:
        external_customer_id:
          example: "1234567"
          type: string
        add_on_code:
          example: code
          type: string
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
      required:
      - add_on_code
      - external_customer_id
      type: object
    CouponInput_coupon_applies_to:
      example:
        plan_codes:
        - code1
        - code1
        billable_metric_codes:
        - code2
        - code2
      properties:
        plan_codes:
          items:
            example: code1
            type: string
          type: array
        billable_metric_codes:
          items:
            example: code2
            type: string
          type: array
      type: object
    CouponInput_coupon:
      example:
        code: example_code
        applies_to:
          plan_codes:
          - code1
          - code1
          billable_metric_codes:
          - code2
          - code2
        amount_cents: 1200
        percentage_rate: 25.0
        amount_currency: EUR
        frequency_duration: 3
        name: coupon1
        expiration: no_expiration
        expiration_at: 2022-09-14T23:59:59Z
        coupon_type: fixed_amount
        reusable: true
        frequency: once
      properties:
        name:
          example: coupon1
          type: string
        code:
          example: example_code
          type: string
        coupon_type:
          description: Coupon type
          enum:
          - fixed_amount
          - percentage
          type: string
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
        reusable:
          example: true
          type: boolean
        percentage_rate:
          example: 25.0
          type: number
        frequency:
          description: Frequency type
          enum:
          - once
          - recurring
          type: string
        frequency_duration:
          example: 3
          type: integer
        expiration_at:
          example: 2022-09-14T23:59:59Z
          format: date-time
          type: string
        expiration:
          description: Expiration type
          enum:
          - no_expiration
          - time_limit
          type: string
        applies_to:
          $ref: '#/components/schemas/CouponInput_coupon_applies_to'
      type: object
    AppliedCouponObjectExtended_allOf:
      properties:
        credits:
          items:
            $ref: '#/components/schemas/CreditObject'
          type: array
      required:
      - credits
      type: object
      example: null
    AppliedCouponInput_applied_coupon:
      example:
        coupon_code: example_code
        amount_cents: 1200
        percentage_rate: 25.0
        external_customer_id: "123456"
        frequency_duration: 3
        amount_currency: EUR
        frequency: once
      properties:
        external_customer_id:
          example: "123456"
          type: string
        coupon_code:
          example: example_code
          type: string
        frequency:
          description: Frequency type
          enum:
          - once
          - recurring
          type: string
        frequency_duration:
          example: 3
          type: integer
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
        percentage_rate:
          example: 25.0
          type: number
      required:
      - coupon_code
      - external_customer_id
      type: object
    OrganizationInput_organization:
      example:
        country: CZ
        legal_number: "10000"
        webhook_url: https://example.com
        city: City
        timezone: Europe/Paris
        email_settings:
        - invoice.finalized
        - invoice.finalized
        billing_configuration:
          document_locale: fr
          invoice_footer: text
          invoice_grace_period: 5
          vat_rate: 25.0
        zipcode: "10000"
        address_line2: address2
        address_line1: address1
        state: state1
        legal_name: name1
        email: example@example.com
        tax_identification_number: EU123456789
      properties:
        webhook_url:
          example: https://example.com
          type: string
        country:
          example: CZ
          type: string
        address_line1:
          example: address1
          type: string
        address_line2:
          example: address2
          type: string
        state:
          example: state1
          type: string
        zipcode:
          example: "10000"
          type: string
        email:
          example: example@example.com
          format: email
          type: string
        city:
          example: City
          type: string
        legal_name:
          example: name1
          type: string
        legal_number:
          example: "10000"
          type: string
        tax_identification_number:
          example: EU123456789
          type: string
        timezone:
          example: Europe/Paris
          type: string
        email_settings:
          items:
            enum:
            - invoice.finalized
            - credit_note.created
            type: string
          type: array
        billing_configuration:
          $ref: '#/components/schemas/BillingConfigurationOrganization'
      type: object
    CustomerInput_customer_metadata_inner:
      example:
        display_in_invoice: false
        id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        value: John
        key: name
      properties:
        id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          example: name
          type: string
        value:
          example: John
          type: string
        display_in_invoice:
          example: false
          type: boolean
      type: object
    CustomerInput_customer:
      example:
        country: CZ
        legal_number: "10000"
        metadata:
        - display_in_invoice: false
          id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: John
          key: name
        - display_in_invoice: false
          id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: John
          key: name
        city: City
        timezone: Europe/Paris
        external_id: "12345"
        lago_url: https://lago.url
        url: https://example.com
        billing_configuration:
          provider_customer_id: "123456"
          document_locale: fr
          payment_provider: stripe
          invoice_grace_period: 3
          sync_with_provider: true
          vat_rate: 25.0
        zipcode: "10000"
        address_line2: address2
        address_line1: address1
        phone: +3551234567
        name: John Doe
        currency: EUR
        state: state1
        legal_name: name1
        email: example@example.com
        tax_identification_number: EU123456789
      properties:
        external_id:
          example: "12345"
          type: string
        name:
          example: John Doe
          type: string
        country:
          example: CZ
          type: string
        address_line1:
          example: address1
          type: string
        address_line2:
          example: address2
          type: string
        state:
          example: state1
          type: string
        zipcode:
          example: "10000"
          type: string
        email:
          example: example@example.com
          format: email
          type: string
        city:
          example: City
          type: string
        url:
          example: https://example.com
          type: string
        phone:
          example: +3551234567
          type: string
        lago_url:
          example: https://lago.url
          type: string
        legal_name:
          example: name1
          type: string
        legal_number:
          example: "10000"
          type: string
        tax_identification_number:
          example: EU123456789
          type: string
        currency:
          example: EUR
          type: string
        timezone:
          example: Europe/Paris
          type: string
        billing_configuration:
          $ref: '#/components/schemas/BillingConfigurationCustomer'
        metadata:
          items:
            $ref: '#/components/schemas/CustomerInput_customer_metadata_inner'
          type: array
      required:
      - external_id
      type: object
    ChargeUsageObject_charge:
      example:
        min_amount_cents: 1200
        pay_in_advance: true
        charge_model: standard
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        charge_model:
          description: Charge model type
          enum:
          - standard
          - graduated
          - package
          - percentage
          - volume
          type: string
        pay_in_advance:
          type: boolean
        min_amount_cents:
          example: 1200
          type: integer
      type: object
    ChargeUsageObject_billable_metric:
      example:
        aggregation_type: count_agg
        code: code
        name: Example name
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        name:
          example: Example name
          type: string
        code:
          example: code
          type: string
        aggregation_type:
          description: Aggregation type
          enum:
          - count_agg
          - sum_agg
          - max_agg
          - unique_count_agg
          - recurring_count_agg
          type: string
      type: object
    ChargeUsageObject_groups_inner:
      example:
        amount_cents: 1200
        lago_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        units: 3.5
        value: value
        key: key
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          example: key
          type: string
        value:
          example: value
          type: string
        units:
          example: 3.5
          type: number
        amount_cents:
          example: 1200
          type: integer
      type: object
    EventInput_event:
      example:
        transaction_id: "123456"
        code: code
        external_customer_id: "654321"
        external_subscription_id: "123456"
        properties: "{}"
        timestamp: 1669823754
      properties:
        transaction_id:
          example: "123456"
          type: string
        external_customer_id:
          example: "654321"
          type: string
        code:
          example: code
          type: string
        timestamp:
          example: 1669823754
          type: integer
        external_subscription_id:
          example: "123456"
          type: string
        properties:
          type: object
      required:
      - code
      - transaction_id
      type: object
    EventEstimateFeesInput_event:
      example:
        code: code
        external_customer_id: "654321"
        external_subscription_id: "123456"
        properties: "{}"
      properties:
        code:
          example: code
          type: string
        external_customer_id:
          example: "654321"
          type: string
        external_subscription_id:
          example: "123456"
          type: string
        properties:
          type: object
      required:
      - code
      type: object
    BatchEventInput_event:
      example:
        transaction_id: "123456"
        code: code
        external_customer_id: "654321"
        external_subscription_ids:
        - external_subscription_ids
        - external_subscription_ids
        properties: "{}"
        timestamp: 1669823754
      properties:
        transaction_id:
          example: "123456"
          type: string
        external_customer_id:
          example: "654321"
          type: string
        code:
          example: code
          type: string
        timestamp:
          example: 1669823754
          type: integer
        external_subscription_ids:
          items:
            type: string
          type: array
        properties:
          type: object
      required:
      - code
      - external_subscription_ids
      - transaction_id
      type: object
    FeesPaginated_allOf:
      properties:
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      required:
      - meta
      type: object
      example: null
    FeeUpdateInput_invoice:
      example:
        payment_status: pending
      properties:
        payment_status:
          description: Status
          enum:
          - pending
          - succeeded
          - failed
          - refunded
          type: string
      required:
      - payment_status
      type: object
    PlanInput_plan_charges_inner_group_properties_inner:
      example:
        group_id: "123456"
        values: "{}"
      properties:
        group_id:
          example: "123456"
          type: string
        values:
          type: object
      required:
      - group_id
      - values
      type: object
    PlanInput_plan_charges_inner:
      example:
        invoiceable: true
        billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        group_properties:
        - group_id: "123456"
          values: "{}"
        - group_id: "123456"
          values: "{}"
        min_amount_cents: 0
        pay_in_advance: true
        charge_model: standard
        id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        properties: "{}"
      properties:
        id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        billable_metric_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        charge_model:
          description: Charge model type
          enum:
          - standard
          - graduated
          - package
          - percentage
          - volume
          type: string
        pay_in_advance:
          type: boolean
        invoiceable:
          type: boolean
        min_amount_cents:
          type: integer
        properties:
          type: object
        group_properties:
          items:
            $ref: '#/components/schemas/PlanInput_plan_charges_inner_group_properties_inner'
          type: array
      type: object
    PlanInput_plan:
      example:
        charges:
        - invoiceable: true
          billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          group_properties:
          - group_id: "123456"
            values: "{}"
          - group_id: "123456"
            values: "{}"
          min_amount_cents: 0
          pay_in_advance: true
          charge_model: standard
          id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          properties: "{}"
        - invoiceable: true
          billable_metric_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          group_properties:
          - group_id: "123456"
            values: "{}"
          - group_id: "123456"
            values: "{}"
          min_amount_cents: 0
          pay_in_advance: true
          charge_model: standard
          id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          properties: "{}"
        code: example_code
        amount_cents: 1200
        amount_currency: EUR
        bill_charges_monthly: false
        name: example name
        pay_in_advance: true
        description: description
        interval: weekly
        trial_period: 2
      properties:
        name:
          example: example name
          type: string
        code:
          example: example_code
          type: string
        interval:
          description: Plan interval
          enum:
          - weekly
          - monthly
          - yearly
          type: string
        description:
          example: description
          type: string
        amount_cents:
          example: 1200
          type: integer
        amount_currency:
          example: EUR
          type: string
        trial_period:
          example: 2
          type: number
        pay_in_advance:
          example: true
          type: boolean
        bill_charges_monthly:
          example: false
          type: boolean
        charges:
          items:
            $ref: '#/components/schemas/PlanInput_plan_charges_inner'
          type: array
      type: object
    SubscriptionCreateInput_subscription:
      example:
        external_customer_id: "12345"
        billing_time: calendar
        name: Test name
        subscription_at: 2022-08-08T00:00:00Z
        plan_code: example_code
        external_id: "54321"
      properties:
        external_customer_id:
          example: "12345"
          type: string
        plan_code:
          example: example_code
          type: string
        name:
          example: Test name
          type: string
        external_id:
          example: "54321"
          type: string
        billing_time:
          description: Billing time
          enum:
          - calendar
          - anniversary
          type: string
        subscription_at:
          example: 2022-08-08T00:00:00Z
          format: date-time
          type: string
      required:
      - external_customer_id
      - external_id
      - plan_code
      type: object
    SubscriptionUpdateInput_subscription:
      example:
        name: New name
        subscription_at: 2022-08-08T00:00:00Z
      properties:
        name:
          example: New name
          type: string
        subscription_at:
          example: 2022-08-08T00:00:00Z
          format: date-time
          type: string
      type: object
    CreditObject_item:
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        type:
          example: coupon
          type: string
        code:
          example: code
          type: string
        name:
          example: name
          type: string
      required:
      - code
      - lago_id
      - name
      - type
      type: object
    CreditObject_invoice:
      properties:
        lago_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        payment_status:
          enum:
          - pending
          - succeeded
          - failed
          type: string
      required:
      - lago_id
      - payment_status
      type: object
    FeeObject_item:
      example:
        lago_item_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        code: code
        item_type: AddOn
        name: name
        type: charge
      properties:
        type:
          description: Billing time
          enum:
          - charge
          - add_on
          - subscription
          - credit
          type: string
        code:
          example: code
          type: string
        name:
          example: name
          type: string
        lago_item_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        item_type:
          enum:
          - AddOn
          - BillableMetric
          - Subscription
          - WalletTransaction
          type: string
      required:
      - code
      - item_type
      - lago_item_id
      - name
      - type
      type: object
    InvoiceObjectExtended_allOf:
      properties:
        credits:
          items:
            $ref: '#/components/schemas/CreditObject'
          type: array
        fees:
          items:
            $ref: '#/components/schemas/FeeObject'
          type: array
        subscriptions:
          items:
            $ref: '#/components/schemas/SubscriptionObject'
          type: array
      required:
      - credits
      - fees
      - subscriptions
      type: object
      example: null
    InvoiceInput_invoice_metadata_inner:
      example:
        id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        value: John
        key: name
      properties:
        id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        key:
          example: name
          type: string
        value:
          example: John
          type: string
      type: object
    InvoiceInput_invoice:
      example:
        metadata:
        - id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: John
          key: name
        - id: 1a901a90-1a90-1a90-1a90-1a901a901a90
          value: John
          key: name
        payment_status: pending
      properties:
        payment_status:
          description: Status
          enum:
          - pending
          - succeeded
          - failed
          type: string
        metadata:
          items:
            $ref: '#/components/schemas/InvoiceInput_invoice_metadata_inner'
          type: array
      type: object
    InvoiceOneOffInput_invoice_fees_inner:
      example:
        unit_amount_cents: 1200
        description: This is description
        add_on_code: "12345"
        units: 2.5
      properties:
        add_on_code:
          example: "12345"
          type: string
        unit_amount_cents:
          example: 1200
          type: integer
        units:
          example: 2.5
          type: number
        description:
          example: This is description
          type: string
      required:
      - add_on_code
      type: object
    InvoiceOneOffInput_invoice:
      example:
        fees:
        - unit_amount_cents: 1200
          description: This is description
          add_on_code: "12345"
          units: 2.5
        - unit_amount_cents: 1200
          description: This is description
          add_on_code: "12345"
          units: 2.5
        external_customer_id: _ID_
        currency: EUR
      properties:
        external_customer_id:
          example: _ID_
          type: string
        currency:
          example: EUR
          type: string
        fees:
          items:
            $ref: '#/components/schemas/InvoiceOneOffInput_invoice_fees_inner'
          type: array
      required:
      - external_customer_id
      type: object
    WalletInput_wallet:
      example:
        external_customer_id: "12345"
        name: Wallet name
        rate_amount: 2.0
        currency: EUR
        expiration_at: 2022-09-14T23:59:59Z
        paid_credits: 500.0
        granted_credits: 10.0
      properties:
        name:
          example: Wallet name
          type: string
        rate_amount:
          example: 2.0
          type: number
        currency:
          example: EUR
          type: string
        paid_credits:
          example: 500.0
          type: number
        granted_credits:
          example: 10.0
          type: number
        external_customer_id:
          example: "12345"
          type: string
        expiration_at:
          example: 2022-09-14T23:59:59Z
          format: date-time
          type: string
      required:
      - currency
      - external_customer_id
      - rate_amount
      type: object
    WalletUpdateInput_wallet:
      example:
        name: Wallet name
        expiration_at: 2022-09-14T23:59:59Z
      properties:
        name:
          example: Wallet name
          type: string
        expiration_at:
          example: 2022-09-14T23:59:59Z
          format: date-time
          type: string
      type: object
    WalletTransactionInput_wallet_transaction:
      example:
        wallet_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        paid_credits: 100.0
        granted_credits: 10.0
      properties:
        wallet_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        paid_credits:
          example: 100.0
          type: number
        granted_credits:
          example: 10.0
          type: number
      required:
      - wallet_id
      type: object
    CreditNoteInput_credit_note_items_inner:
      example:
        amount_cents: 20
        fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        fee_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        amount_cents:
          example: 20
          type: integer
      required:
      - amount_cents
      - fee_id
      type: object
    CreditNoteInput_credit_note:
      example:
        reason: duplicated_charge
        credit_amount_cents: 20
        invoice_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        description: description
        refund_amount_cents: 20
        items:
        - amount_cents: 20
          fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
        - amount_cents: 20
          fee_id: 1a901a90-1a90-1a90-1a90-1a901a901a90
      properties:
        invoice_id:
          example: 1a901a90-1a90-1a90-1a90-1a901a901a90
          format: uuid
          type: string
        reason:
          description: Reason
          enum:
          - duplicated_charge
          - product_unsatisfactory
          - order_change
          - order_cancellation
          - fraudulent_charge
          - other
          type: string
        description:
          example: description
          type: string
        credit_amount_cents:
          example: 20
          type: integer
        refund_amount_cents:
          example: 20
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CreditNoteInput_credit_note_items_inner'
          type: array
      required:
      - credit_amount_cents
      - invoice_id
      - items
      - reason
      - refund_amount_cents
      type: object
    CreditNoteUpdateInput_credit_note:
      example:
        refund_status: pending
      properties:
        refund_status:
          description: Refund status
          enum:
          - pending
          - succeeded
          - failed
          type: string
      required:
      - refund_status
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http

