/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: tech@getlago.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing CustomersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CustomersApiTests
    {
        private CustomersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CustomersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' CustomersApi
            //Assert.IsInstanceOf(typeof(CustomersApi), instance);
        }

        
        /// <summary>
        /// Test CreateCustomer
        /// </summary>
        [Test]
        public void CreateCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CustomerInput customerInput = null;
            //var response = instance.CreateCustomer(customerInput);
            //Assert.IsInstanceOf(typeof(Customer), response, "response is Customer");
        }
        
        /// <summary>
        /// Test FindAllCustomers
        /// </summary>
        [Test]
        public void FindAllCustomersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? perPage = null;
            //var response = instance.FindAllCustomers(page, perPage);
            //Assert.IsInstanceOf(typeof(Customers), response, "response is Customers");
        }
        
        /// <summary>
        /// Test FindCustomer
        /// </summary>
        [Test]
        public void FindCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string externalId = null;
            //var response = instance.FindCustomer(externalId);
            //Assert.IsInstanceOf(typeof(Customer), response, "response is Customer");
        }
        
        /// <summary>
        /// Test FindCustomerCurrentUsage
        /// </summary>
        [Test]
        public void FindCustomerCurrentUsageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string customerExternalId = null;
            //string externalSubscriptionId = null;
            //var response = instance.FindCustomerCurrentUsage(customerExternalId, externalSubscriptionId);
            //Assert.IsInstanceOf(typeof(CustomerUsage), response, "response is CustomerUsage");
        }
        
    }

}
