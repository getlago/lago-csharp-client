/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: tech@getlago.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing CouponsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CouponsApiTests
    {
        private CouponsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CouponsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CouponsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' CouponsApi
            //Assert.IsInstanceOf(typeof(CouponsApi), instance);
        }

        
        /// <summary>
        /// Test ApplyCoupon
        /// </summary>
        [Test]
        public void ApplyCouponTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AppliedCouponInput appliedCouponInput = null;
            //var response = instance.ApplyCoupon(appliedCouponInput);
            //Assert.IsInstanceOf(typeof(AppliedCoupon), response, "response is AppliedCoupon");
        }
        
        /// <summary>
        /// Test CreateCoupon
        /// </summary>
        [Test]
        public void CreateCouponTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CouponInput couponInput = null;
            //var response = instance.CreateCoupon(couponInput);
            //Assert.IsInstanceOf(typeof(Coupon), response, "response is Coupon");
        }
        
        /// <summary>
        /// Test DestroyCoupon
        /// </summary>
        [Test]
        public void DestroyCouponTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string code = null;
            //var response = instance.DestroyCoupon(code);
            //Assert.IsInstanceOf(typeof(Coupon), response, "response is Coupon");
        }
        
        /// <summary>
        /// Test FindAllAppliedCoupons
        /// </summary>
        [Test]
        public void FindAllAppliedCouponsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? perPage = null;
            //string status = null;
            //string externalCustomerId = null;
            //var response = instance.FindAllAppliedCoupons(page, perPage, status, externalCustomerId);
            //Assert.IsInstanceOf(typeof(AppliedCoupons), response, "response is AppliedCoupons");
        }
        
        /// <summary>
        /// Test FindAllCoupons
        /// </summary>
        [Test]
        public void FindAllCouponsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? perPage = null;
            //var response = instance.FindAllCoupons(page, perPage);
            //Assert.IsInstanceOf(typeof(Coupons), response, "response is Coupons");
        }
        
        /// <summary>
        /// Test FindCoupon
        /// </summary>
        [Test]
        public void FindCouponTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string code = null;
            //var response = instance.FindCoupon(code);
            //Assert.IsInstanceOf(typeof(Coupon), response, "response is Coupon");
        }
        
        /// <summary>
        /// Test UpdateCoupon
        /// </summary>
        [Test]
        public void UpdateCouponTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string code = null;
            //CouponInput couponInput = null;
            //var response = instance.UpdateCoupon(code, couponInput);
            //Assert.IsInstanceOf(typeof(Coupon), response, "response is Coupon");
        }
        
    }

}
